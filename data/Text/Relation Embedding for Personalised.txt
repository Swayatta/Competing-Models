0
2
0
2

 

b
e
F
9
1

 

 
 
]

G
L
.
s
c
[
 
 

2
v
1
6
4
3
0

.

2
0
0
2
:
v
i
X
r
a

Relation Embedding for Personalised

Translation-based POI Recommendation

Xianjing Wang1,2, Flora D. Salim1,4[0000−0002−1237−1664], Yongli

Ren1[0000−0002−3137−9653], and Piotr Koniusz2,3(cid:63)

1 RMIT University, Melbourne, Australia

{xianjing.wang, flora.salim, yongli.ren}@rmit.edu.au

2 Data61/CSIRO, Canberra, Australia

piotr.koniusz@data61.csiro.au

3 Australian National University, Canberra, Australia

4 Corresponding author

Abstract. Point-of-Interest (POI) recommendation is one of the most
important location-based services helping people discover interesting venues
or services. However, the extreme user-POI matrix sparsity and the vary-
ing spatio-temporal context pose challenges for POI systems, which af-
fects the quality of POI recommendations. To this end, we propose a
translation-based relation embedding for POI recommendation. Our ap-
proach encodes the temporal and geographic information, as well as se-
mantic contents eﬀectively in a low-dimensional relation space by using
Knowledge Graph Embedding techniques. To further alleviate the issue
of user-POI matrix sparsity, a combined matrix factorization framework
is built on a user-POI graph to enhance the inference of dynamic per-
sonal interests by exploiting the side-information. Experiments on two
real-world datasets demonstrate the eﬀectiveness of our proposed model.
Keywords: Knowledge graph embedding · Collaborative ﬁltering · Ma-
trix factorization · Recommender system · POI recommendation.

1

Introduction

With the increase of mobile devices on the market and ubiquitous presence of
wireless communication networks, people gain easy access to Point-of-Interest
(POI) recommendation services. A great number of Location-based Social Net-
works (LBSNs) have consequently been established e.g., Foursquare, Gowalla,
Facebook Places, and Brightkite. The LBSNs often provide POI services that
recommend users new POI venues that meet speciﬁc user criteria. In this paper,
we develop a high quality personalized POI recommendation system by leverag-
ing user check-in data. There are three technical challenges listed as follows:
Sparsity of user check-in data. One of the major challenges is to overcome
the sparsity in the user check-in data. The user-POI matrix can be extremely
sparse despite of millions of POIs and users in LBSNs.

(cid:63) This paper is accepted by the PAKDD’20.

2

X. Wang et al.

Temporal reasoning. Location-based POI recommendation systems utilize the
temporal context [24] for the purpose of modeling personal preferences. The
temporal information reﬂects users’ needs and choices throughout the day.

Spatial reasoning. A user’s current geographical location limits their choice of
check-in POIs [13]. Many approaches model relations between a user’s current
geographical location and their preferences with respect to the surrounding POIs.

h r−→ t user

(h, r, t)

h + r = t

−−−−−−→ sushi shop

12pm−→ e1
(u, rt, e1) and (e1, rl, v)

f oodcourt

(u, rt ◦ rl, v)

u + rt = e1 and e1 + rl = v

u + (rt ◦ rl) = v

Fig. 1: Overview of our GERec model.

Table 1: Relation path embedding.

The above issues are often addressed by the use of side information in tra-
ditional recommendation systems. Such a side information may be retrieved
from social networks [9] and may include user demographic information, item
attributes, and context information [26]. As the auxiliary data is useful for the
recommendation systems [19], it is desirable to model and utilize heterogeneous
and complex data types in recommendation systems. However, the traditional
collaborative ﬁltering techniques such as Matrix Factorization (MF) cannot deal
with the above problems in a uniﬁed manner. Knowledge Graph Embedding
(KGE) [21,1], also known as a translation-based embedding model, encodes the
side-information to improve the performance of Recommender Systems (RS)
[16,27]. He et al . [6] and Zhang et al . [27] employ the KGE model to represent
users, movies, and movie attributes. The graph edges represent connections be-
tween users and movies in a knowledge base [6,27]. However, previous studies
do not oﬀer insights on the following challenges: (1) how to construct a user-
POI graph that utilizes the user check-in data with side information, such as
spatio-temporal data and semantic context information, to leverage data spar-
sity problem; (2) how to eﬀectively integrate a translation-based embedding
model with a traditional recommendation system to improve the quality of POI
recommendation.

Problem deﬁnition. Given an LBSN user check-in dataset, we aim to recom-
mend each user with personalized top-k POIs they may be interested in visiting.
We build upon recent advances in graph embedding methods and propose
Graph Embedding for POI Recommendation, a novel translation-based graph em-
bedding approach speciﬁcally for POI recommendation, abbreviated as GERec.
To overcome the challenge stemming from the spatio-temporal context, GERec
encodes temporal and spatial information, as well as user dynamic check-in ac-
tivities in a low-dimensional latent space. GERec addresses the issues of user

Relation Embedding for Personalised POI Recommendation

3

check-in data sparsity by integrating user-POI graph embedding with a com-
bined matrix factorization framework (Fig. 1).
Contributions.

I. To deal with the data sparsity, we propose a novel translation-based POI
recommendation model to eﬀectively form a user-POI graph capturing
the side information, such as spatial, temporal, and semantic contents.

II. We propose a spatio-temporal relation path embedding to model the tem-
poral, spatial and semantic content information to improve the quality of
POI recommendations.

III. We show our model outperforms the state-of-the-art POI recommendation
techniques on two real-world LBSN datasets, Foursquare[2] and Gowalla[3].

2 Related Work

POI recommendations. Making personalized POI recommendations is chal-
lenging due to the user dynamic check-in activities. Existing studies on MF-based
POI recommendations either focus on aggregating spatially-wise personal prefer-
ence or exploring temporal inﬂuences. Most aggregation-based POI recommenda-
tion approaches fail to capture jointly geographical and temporal inﬂuences with
the semantic context while addressing the data sparsity in an uniﬁed framework.
In [22,25], geographical locations are used to improve the performance of POI
system which highlights that there is a strong correlation between user check-
in activities and geographical distance. Geographical sparse additive generative
model [22] for POI recommendations, Geo-SAGE, exploited co-occurrence pat-
terns with contents of spatial items. A POI system [25] based on deep learning
from heterogeneous features and hierarchically additive representation learning
proposed spatially-aware model for personal preferences.
Knowledge Graph Embedding. KGE is well known for its use in recommen-
dation systems. Zhang et al . [27] proposed a collaborative KG-integrated movie
recommender framework to learn the latent and visual representations. Palumbo
et al . [16] proposed entity2rec to capture a user-item relatedness from KGEs
with the goal of generating top-k item recommendations. Qian et al . [18] adopts
KGE to model the side information in POI recommendation system. Their work
only focuses on embedding the user and POI entities, and mapping the spatio-
temporal patterns as a translation matrix. Although their work explored KGEs
and RS, it did not integrate graph embedding with the traditional MF model.
Compared with our proposed model that combines the spatial and temporal in-
formation with semantic contents in a semantic relation embedding space, these
KG embedding-based recommender models have limited expressive abilities as
they model the key parameters (e.g., spatial and temporal information) as a sim-
ple matrix. Finally, noteworthy is the family of Graph Convolutional Networks
with models such as GCN [7], GraphSAGE [5], adversary GCN [20], kernel-based
CKN [14] as well as generic graph embedding approaches such as DeepWalk [17]
and Node2Vec [4] which all have the capacity to model graph-related tasks.

4

X. Wang et al.

Diﬀerence with existing works. 1) To the best of our knowledge, this is the
ﬁrst work that investigates the joint modeling of temporal, geographical and
semantic category information integrated with KG embedding POI recommen-
dation system; 2) A novel embedding is proposed to bridge the gaps between
embedding and traditional MF. Therefore, we propose a novel combined MF
framework for dynamic user-POI preference modeling based on the learned em-
bedding in a uniﬁed manner; 3) In contrast to the approach [24] based on the
bipartite graph (homogeneous graph), our approach uses the translation-based
graph (heterogeneous graph). Moreover, approach [24] does not apply MF while
our model investigates MF for generating top-k proposals.

3 Proposed Approach

3.1 User-POI Graph Embedding

A heterogeneous graph admits two or more node types which can be then embed-
ded by a symmetric function e.g., one can use interchange user type and POI
type input arguments. For the best recommendation performance, we develop
an eﬀective representation for the user and POI nodes. A user u and a POI v
represent the head or tail of a triplet (head, relation, tail), denoted as (u, r, v),
where u, e, v ∈ Rk are the vector representations of u, r and v.

Head-tail entity pairs usually exhibit diverse patterns in terms of relations
[12]. Thus, a single relation vector cannot perform all translations between head
and tail entities. For example, the relation path embedding has the diversity
patterns, such as temporal, spatial and semantic contents patterns. The relation
between user (head) and POI (tail) “user - sushi shop” exhibits many patterns:
(i) Temporal pattern i.e., a user visits a POI in a certain time slot <user, /time
slot, POI>; (ii) Geographical pattern i.e., a user visits a POI when she is in a
particular area <user, /location, POI>; and (iii) Semantic content pattern i.e.,
a user visits a speciﬁc POI that is associated with a category <user, /category,
POI>. In our model, we embed spatio-temporal information as a relationship
connecting users and POIs.

12pm−→ e1

Take the 2-step path as an example. In Table 1, a user check-in activity (a
user visits a POI) is associated with temporal and geographical patterns i.e.,
−−−−−−→ sushi shop denotes a user visiting a sushi shop (POI) at
user
12pm (time slot) at food court (location). Instead of building triplets (u, rt, e1)
and (e1, rl, v) for learning the graph representation, we form a triplet (u, rt◦rl, v),
and optimize the objective u + (rt ◦ rl) = v. The composition operator ◦ merges
the temporal and spatial relations rt and rl into the spatio-temporal relation.
Given a relation path r = (r1, . . . , rn), we obtain the relation path embedding r
by composing multiple relations via the operator ◦, i.e., r = r1 ◦···◦ rn. For the
composition operator, we use the multiplication operation. Thus, the relation
path vector is deﬁned as r = r1×···× rn. In our model, we embed temporal and
geographical patterns, and semantic category contents into the relation path.
For instance, u rt−→ e1
rc−→ v illustrates that a user visits a POI at

f oodcourt

rl−→ e2

Relation Embedding for Personalised POI Recommendation

5

a certain time slot t in location l, which has semantic category information c
associated with the user’s current location. We deﬁne a spatio-temporal and
semantic-based relation path representation rtlc = rt ◦ rl ◦ rc, which consists
of a temporal relation path rt, a geographical relation path rl, and a semantic
relation path rc. The relation rtlc is used as our default relation representation
in our POI model. In what follows, we write r instead of rtlc for simplicity.

TransR [12,21] is among the most representative translational distance mod-
els for a heterogeneous graphs. We apply TransR [12] to our POI recommen-
dation model. For each triplet, including (u, rtl, v) and (u, rtlc, v) in the graph,
entities are embedded into vectors u, v ∈ Rk and relation is embedding into
r ∈ Rd. For each relation r, we set a projection matrix from the entity space to
the relation space, denoted as M r ∈ Rk×d. TransR ﬁrstly maps entities u and v
into the subspace of relation r by using matrix M r:

ur = uM r

and vr = vM r,

and the TransR score function is deﬁned as:

fr(u, v) =(cid:107) ur + r − vr (cid:107)2
2 .

(1)

(2)

The following margin-based ranking loss deﬁned in [12] is used for training:

(cid:88)

(cid:88)

L =

(u,r,v)∈S

(u(cid:48),r,v(cid:48))∈S(cid:48)

max(0, fr(u, v) + γ − fr(u(cid:48), v(cid:48))),

(3)

where γ controls the margin between positive and negative samples, S and S(cid:48) are
the set of positive and negative triplets, respectively. The existing graphs that
we construct from user-POI check-in datasets contain mostly correct triplets.
Thus, we corrupt the correct triplet (u, r, v) ∈ S to construct incorrect triplets
(u(cid:48), r, v(cid:48)) by replacing either head or tail entities with other entities from the
same group so that:

S(cid:48) = {(h(cid:48), r, t)} ∪ {(h, r, t(cid:48))}.

(4)

We note that translation-based embedding provides a generic way for extract-
ing a useful information from a graph. However, embedding cannot be applied
directly to matrix factorization models. Thus, we propose a function g(·) that
extracts the learnt entities. Given an entity u, v and a relation r, we obtain rep-
resentation sets {er
v}, where r denotes the set of relation paths, where
er
u and er
v represent a user u and a POI v with respect to the speciﬁc relation
path r. Thus, the entity extraction is denoted as:

u} and {er

{φu} ← g({er

u}),

{φv} ← g({er

v}),

(5)
where {φu} and {φv} are sets of ﬁnal representations for user and POI em-
bedding, respectively. The function g(·) prepares the embedded user and POI
information to become the entries for the matrix factorization by sorting the
learnt user and POI embedding sets based on the distances from Eq. (2) sorted
according to the descending order. Embedded pairs that are further from each

6

X. Wang et al.

other than some θ are pruned. When a user connects with a POI by a relation
(u + r ≈ v), the smaller the score value, the lower distance between POI and
user is. Hence, (v + r ≈ u) vice versa. Then, the sorted user and POI embedding
sets are ﬁltered according to the user’s current location. In many cases, POIs
may be outside of the user’s home location and it may be not reasonable to
recommend such POIs. Thus, we set a reasonable radius w.r.t. the geographical
location by applying a threshold θd to ﬁlter the learnt POIs that are too far away
from user’s home location. Following [10,23], we assume a Gaussian distribution
for user current location l, and we set the user’s current check-in POI vl so that
vl ∼ N (µl, Σl).

3.2 The Combined Matrix Factorization

We integrate the matrix factorization into our model by combining two parts:
1) spatio-temporal MF and 2) User preference MF. The spatio-temporal MF
calculates the probability that a user will visit a POI. The user preference MF
evaluates user’s preference w.r.t. a POI. The combined probability determines
the total probability of a user u visiting a POI v.

Spatio-temporal MF. For each embedded user vector φu and embedded POI
vector φv, we apply the matrix factorization to predict a probability that a user
u would visit a POI v based on her current location l and a particular time slot
t. Given a frequency matrix P (cid:48) ∈ R|{φu}|×|{φv}|, which represents the number
of check-ins of the embedded users for the embedded POIs. MF is performed by
ﬁnding two low-rank matrices: a user speciﬁc matrix E ∈ RK×|{φu}| and a POI
speciﬁc matrix O ∈ RK×|{φv}|, where K is the dimension of the latent vector
that captures the corresponding user-POI preference transition. The probability
of an embedded user u based on a particular spatio-temporal relation rtl and
embedded location v, is determined by:

P (cid:48)
uv = Eu

(cid:62)Ov,

(6)

where Eu and Ov are vectors for the user u and the POI v from matrices E and
O, respectively, while P (cid:48)

uv is a scalar frequency for u and v.

The goal of matrix factorization is to accurately approximate the probabilities

(cid:88)

(u,v)∈Ω

for the user frequency data:

α((cid:107) E (cid:107)2

F + (cid:107) O (cid:107)2

F ) +

min
E, O

(P (cid:48)

uv − Eu

(cid:62)Ov)2,

(7)

where (u, v) ∈ Ω indicates the observed frequency of user u at POI v, ||
is the Frobenius norm, and α((cid:107) E (cid:107)2
prevent overﬁtting.

||2
F
F ) is a regularization term to

F + (cid:107) O (cid:107)2

·

Relation Embedding for Personalised POI Recommendation

7

User preference MF. The second part of the combined MF model is to predict
the user preference given a POI. Based on the user historical check-in frequency,
given an observed frequency matrix F , MF factorizes users and POIs so that
F ≈ U(cid:62)V . Then, scalar P (cid:48)(cid:48)
uv captures users’ preference at a POI determined by
the following equation:

(8)

uv = U(cid:62)
P (cid:48)(cid:48)

uV v

The same objective as in Eq. (7) is applied to accurately approximate the prob-
abilities for the user check-in frequencies.

Combined Matrix Factorization. We propose a combined MF model that is
simply a product of probabilities that 1) a user is spatio-temporally compatible
with a POI and 2) the user has a preference given the POI. The ﬁrst term
is the probability of an embedded user visiting an embedded POI given some
spatio-geographic pattern, where P (cid:48)
uv is deﬁned by Eq. (6). The second term is
the probability of the user’s preference at a POI based on her historical records,
where P (cid:48)(cid:48)

uv is deﬁned in Eq. (8). The combined model is denoted as:

Puv = P (cid:48)

uv·P (cid:48)(cid:48)
uv.

(9)

4 Experiments

4.1 Experimental Conﬁguration

Datasets. We adopt two popular large-scale LBSN datasets: Foursquare [2]
and Gowalla [3]. The experimental results for our approach and the baselines
are compared in the same testbed. We selected the Foursquare dataset from Sep
2010 to Jan 2011 which contains 1,434,668 users check-in activities in the USA.
The Foursquare geographical area is divided into a set of 5846 locations/regions
according to administrative divisions. There are 114, 508 user entities and 62, 462
POI entities connected with 46, 768 spatio-temporal relations. For Gowalla, an-
other graph is built from 107, 092 user entities and 1, 280, 969 POI entities con-
nected with 1, 633 relations. We apply k-means [26,18] to form 200 region clusters
for Gowalla geographical area.
Baselines. Two of the baseline models are translation-based models that are
highly related work in RS [6,18]. PMF [15] is a classic probabilistic matrix fac-
torization model that explicitly factorizes the rating matrix into two low-rank
matrices. GeoMF [9] is a weighted matrix factorization model for POI recom-
mendations. Rank-GeoFM [8] is a ranking-based geographical factorization
model in which the check-in frequency characterizes users’ visiting preference,
and the factorization is learnt by ranking POIs. GeoSoCa model [28] extends
the kernel density estimation by applying an adaptive bandwidth learnt from
the user check-in data. ST-LDA [26] is a latent class probabilistic generative
Spatio-Temporal LDA (Latent Dirichlet Allocation) model, which learns the
region-dependent personal interests according to the contents of the checked-in

8

X. Wang et al.

POIs at each region. TransRec is the translation-based recommendation ap-
proach proposed in [6], which embeds items into a translation space and models
users via a translation vector. Note that our proposed method is diﬀerent from
TransRec as we select both users and POIs as entities, and learn the embedding
representation for a diﬀerent type of knowledge as well as the spatio-temporal re-
lationships. STA [18] is a spatio-temporal context-aware and translation-based
POI recommendation model. However, this solution does not consider the seman-
tic relation embedding of spatial, temporal and category content information,
and thus is incapable of leveraging the user-POI graph structure.
Evaluation Metrics. Following [9,8,28], we deploy the following evaluation
methodology. The user-POI graph is built from historical user check-in activities
in the training set. The spatio-temporal relations in the user-POI graph are com-
posed based on each user’s current time slot and the area from the given query
q = (u, l, t). We divide the time slot to diﬀerent hour lengths (1, 2, 4, 8, 12, 24).
The user’s current standing area before visiting v is selected for her location l.
In the experiment, we ﬁrst calculate the frequency for each user visiting ground-
truth POIs. We use the 80% as the cut-oﬀ point so that check-ins before a partic-
ular date are used for training. The rest check-in data generated after this date is
chosen for testing. We form a top-k recommendation list from the top k POI rec-
ommendations. We deploy measurement metrics such as Precision@k (P rec@k),
Recall@k (Rec@k) and F1-score@k (F @k): P rec@k = 1
and
M
Rec@k = 1
M

(cid:80)M

(cid:80)M

|Vu(k)∩Vu|

|Vu(k)∩Vu|

|Vu|

.

u=1

u=1

k

4.2 Main evaluations

Following [12,11], for translational distance model TransR, we set the learning
rate λ = 0.001, the margin γ = 1, the dimensions of entity embedding and re-
lation embedding d = 100, the batch size B = 120. We traverse all the training
triplets for 1000 rounds on both Foursquare and Gowalla datasets. Fig. 2 reports
the performance of the POI recommendation models on Foursquare and Gowalla
datasets, respectively. We present the performance for k = {1, 5, 10, 20}. Fig. 2
presents the results of algorithms in terms of P rec@k, Rec@k and F 1@k on
Foursquare and Gowalla datasets. The ﬁgure show that the proposed GERec
model outperforms all baseline models signiﬁcantly for all metrics at diﬀerent
k values. Speciﬁcally, when comparing with the traditional MF models, GERec
outperforms the Rank-GeoMF, which is the MF baseline with the best perfor-
mance, by 50% and 47% in F1-score@10 on Foursquare and Gowalla, respectively.
When comparing with translation-based models, our proposed model also im-
proves the POI recommendation performance signiﬁcantly. GERec outperforms
STA, by 20% and 25% in F1-score@10 on both datasets. This demonstrates the
capability of our graph-based GERec model to generate high quality POI rec-
ommendations. Although GeoSoCa exploits social inﬂuences, geographical loca-
tions and user interests, the simple kernel density estimation results in the poor
performance. This validates the eﬀectiveness of our GERec solution, especially
our proposed step which exploits and integrates the user-POI interactions and

Relation Embedding for Personalised POI Recommendation

9

(a) Prec@K on Foursquare (b) Rec@K on Foursquare

(c) F1@K on Foursquare

(d) Prec@K on Gowalla

(e) Rec@K on Gowalla

(f) F1@K on Gowalla

Fig. 2: Baseline comparisons.

spatio-temporal patterns to tackle the sparsity in the user-POI check-in data.
The learned embeddings are well integrated into the combined matrix factor-
ization model. Thus, GERec achieves the best performance among all compared
baseline models. The user-POI graph constructed from Gowalla dataset has fewer
relation edges than the Foursquare graph, as Gowalla relation patterns rtl have
fewer regions in the relation paths than Foursquare.

4.3 Impact of data sparsity

In Fig. 3, we conduct extensive experiments to evaluate the performance of the
models under the data sparsity. Speciﬁcally, we create multiple datasets with
various sparsity levels by reducing the amount of training data randomly by 10%,
20%, 30%, and 40% of the total amount of data (before the cut-oﬀ date), and at
the same time keeping the test data the same. The results on both Foursquare
and Gowalla are shown in the Fig. 3. Speciﬁcally, the 0 in the horizontal axis
presents the experiment result without reducing the training data. We observe
that the Precision@k and Recall@k value decrease for all baseline models. For
example, the performance of these models in terms of Prec@10 decreases at least
40% on Foursquare when reducing 40% of the training data. Results of the ST-
LDA drop signiﬁcantly compared with the other baseline models with 37% drop
in Rec@10 on both Foursquare and Gowalla, which indicates that the LDA-
based model is sensitive to the sparse data. The PMF does not change much,
however, it remains the least accurate result. The Rec@10 values of RankGeoMF,
TransRec, and STA show a 42%, 41%, and 37% drop, respectively. The GERec

10

X. Wang et al.

(a) Prec@10 on Foursquare (b) Rec@10 on Foursquare

(c) F1@10 on Foursquare

(d) Prec@10 on Gowalla

(e) Rec@10 on Gowalla

(f) F1@10 on Gowalla

Fig. 3: Sensitivity to data sparsity.

drops by only 34%, which illustrates that our proposed model is more stable and
robust under sparsity than the baselines.

4.4 Impact of time slot and dimensionality

There are two parameters in the proposed GERec model: the time slot h and
the embedding dimension d. Below, we investigate the eﬀect of these two pa-
rameters. Table 2 shows the impact of the length of time slot on Precision@k
and Recall@k. The length of the time slot aﬀects the quality of POI recommen-
dations. When the length of time slot changes, the relation paths change and
the entire graph needs to be computed again. We split day activities into dif-
ferent lengths. The parameter h denotes the length of each time slot in hours.
The larger length of time slot the less the time inﬂuence on recommendation
results. We report the top-k recommendation precision and recall for each time
slot on the Foursquare and Gowalla datasets. From the experimental results
we observe that the POI recommendation accuracy improves when the time slot
length increases. The recommendation accuracy reaches a peak point for 8 hours
long time slot. Then, it starts decreasing as the time slot keeps increasing. The
reason for the improved accuracy is that the larger time length, the denser the
data. Hence, there are more user check-in records at each time slot for generat-
ing recommendations. However, the recommendation accuracy decreases as the
length of the time slot reaches 8 hours. This is because when the length of the
time slot is large enough, it may reduce the inﬂuence of temporal pattern. More-
over, we study the impact of varying dimension d of the relation embedding by

Relation Embedding for Personalised POI Recommendation

11

Hours

Foursquare

Gowalla

Prec@1 Prec@10 Prec@20 Rec@1 Rec@10 Rec@20 Prec@1 Prec@10 Prec@20 Rec@1 Rec@10 Rec@20

1
2
4
8
12
24

d

0.075
0.100
0.113
0.125
0.119
0.115

0.061
0.083
0.090
0.100
0.095
0.092

0.128
0.170
0.192

0.062
0.082
0.092

0.089
0.041
0.119
0.054
0.060
0.134
0.067 0.103 0.213 0.272 0.149
0.142
0.064
0.062
0.137

0.163
0.218
0.245

0.098
0.094

0.202
0.196

0.258
0.250

0.064
0.086
0.096
0.107
0.102
0.098

0.141
0.150
0.168

0.071
0.094
0.106

0.169
0.047
0.225
0.062
0.070
0.253
0.078 0.118 0.187 0.281
0.267
0.074
0.072
0.259

0.112
0.108

0.178
0.172

Table 2: Impact of the time slot length h.

Foursquare

Gowalla

Prec@1 Prec@10 Prec@20 Rec@1 Rec@10 Rec@20 Prec@1 Prec@10 Prec@20 Rec@1 Rec@10 Rec@20

0.121
70
0.123
80
90
0.124
100 0.125
110 0.126
120 0.126

0.097
0.098
0.099
0.100
0.100
0.101

0.206
0.209
0.211

0.099
0.101
0.102

0.143
0.065
0.146
0.066
0.066
0.148
0.067 0.103 0.213 0.272 0.149
0.150
0.067
0.067
0.150

0.262
0.267
0.269

0.103
0.103

0.214
0.214

0.273
0.274

0.123
0.125
0.127
0.128
0.129
0.129

0.226
0.183
0.185

0.113
0.115
0.117

0.270
0.075
0.275
0.076
0.077
0.278
0.078 0.118 0.187 0.281
0.282
0.078
0.079
0.283

0.118
0.119

0.188
0.188

Table 3: Impact of dimensionality d.

setting it to {70, 80, 90, 100, 120} (Table 3). The best parameter is determined
according to the mean rank in the test set. The accuracy rate increases gradually
when the dimension increases. Speciﬁcally, the accuracy keeps increasing until
the dimension reaches 100, then it remains stable.

5 Conclusions

In this paper, we propose a novel translation-based POI recommendation model,
which can eﬀectively construct a user-POI graph and model the side informa-
tion. To address time and geographical reasoning, we propose spatio-temporal
relation path embedding to model the temporal, spatial and semantic contents
to leverage the user-POI interaction and improve the quality of user embedding.
To overcome the sparsity of the user-POI interaction data, we develop an em-
bedding function which bridges gaps between the translation-based embedding
model and traditional MF-based model. The user-POI graph is integrated with
a combined MF model to improve the quality of POI recommendations.

Acknowledgments

We acknowledge the support of Australian Research Council Discovery DP190101485,
Alexander von Humboldt Foundation, and CSIRO Data61 Scholarship program.

