9
1
0
2

 

b
e
F
6
2

 

 
 
]

G
L
.
s
c
[
 
 

1
v
7
9
1
0
1

.

2
0
9
1
:
v
i
X
r
a

Published as a conference paper at ICLR 2019

ROTATE: KNOWLEDGE GRAPH EMBEDDING BY RELA-
TIONAL ROTATION IN COMPLEX SPACE

Zhiqing Sun 1∗, Zhi-Hong Deng1, Jian-Yun Nie3, Jian Tang2,4,5
1Peking University, China
2Mila-Quebec Institute for Learning Algorithms, Canada
3Universit´e de Montr´eal, Canada
4HEC Montr´eal, Canada
5CIFAR AI Research Chair
{1500012783, zhdeng}@pku.edu.cn
nie@iro.umontreal.ca
jian.tang@hec.ca

ABSTRACT

We study the problem of learning representations of entities and relations in
knowledge graphs for predicting missing links. The success of such a task heavily
relies on the ability of modeling and inferring the patterns of (or between) the re-
lations. In this paper, we present a new approach for knowledge graph embedding
called RotatE, which is able to model and infer various relation patterns includ-
ing: symmetry/antisymmetry, inversion, and composition. Speciﬁcally, the RotatE
model deﬁnes each relation as a rotation from the source entity to the target entity
in the complex vector space. In addition, we propose a novel self-adversarial neg-
ative sampling technique for efﬁciently and effectively training the RotatE model.
Experimental results on multiple benchmark knowledge graphs show that the pro-
posed RotatE model is not only scalable, but also able to infer and model various
relation patterns and signiﬁcantly outperform existing state-of-the-art models for
link prediction.

1

INTRODUCTION

Knowledge graphs are collections of factual triplets, where each triplet (h, r, t) represents a rela-
tion r between a head entity h and a tail entity t. Examples of real-world knowledge graphs include
Freebase (Bollacker et al., 2008), Yago (Suchanek et al., 2007), and WordNet (Miller, 1995). Knowl-
edge graphs are potentially useful to a variety of applications such as question-answering (Hao et al.,
2017), information retrieval (Xiong et al., 2017), recommender systems (Zhang et al., 2016), and
natural language processing (Yang & Mitchell, 2017). Research on knowledge graphs is attracting
growing interests in both academia and industry communities.
Since knowledge graphs are usually incomplete, a fundamental problem for knowledge graph is pre-
dicting the missing links. Recently, extensive studies have been done on learning low-dimensional
representations of entities and relations for missing link prediction (a.k.a., knowledge graph embed-
ding) (Bordes et al., 2013; Trouillon et al., 2016; Dettmers et al., 2017). These methods have been
shown to be scalable and effective. The general intuition of these methods is to model and infer the
connectivity patterns in knowledge graphs according to the observed knowledge facts. For example,
some relations are symmetric (e.g., marriage) while others are antisymmetric (e.g., ﬁliation); some
relations are the inverse of other relations (e.g., hypernym and hyponym); and some relations may be
composed by others (e.g., my mother’s husband is my father). It is critical to ﬁnd ways to model and
infer these patterns, i.e., symmetry/antisymmetry, inversion, and composition, from the observed
facts in order to predict missing links.
Indeed, many existing approaches have been trying to either implicitly or explicitly model one or
a few of the above relation patterns (Bordes et al., 2013; Wang et al., 2014; Lin et al., 2015b;

∗This work was done when the ﬁrst author was visiting Mila and Universit´e de Montr´eal.

1

Published as a conference paper at ICLR 2019

Model

SE (Bordes et al., 2011)

TransE (Bordes et al., 2013)

TransX

DistMult (Yang et al., 2014)

ComplEx (Trouillon et al., 2016)

HolE (Nickel et al., 2016)

ConvE (Dettmers et al., 2017)

RotatE

Score Function

h, t ∈ Rk, Wr,· ∈ Rk×k

−(cid:107)Wr,1h − Wr,2t(cid:107)

−(cid:107)h + r − t(cid:107)

−(cid:107)gr,1(h) + r − gr,2(t)(cid:107)

(cid:104)r, h, t(cid:105)
Re((cid:104)r, h, t(cid:105))
(cid:104)r, h ⊗ t(cid:105)

h, r, t ∈ Rk
h, r, t ∈ Rk
h, r, t ∈ Rk
h, r, t ∈ Ck
h, r, t ∈ Rk
h, r, t ∈ Rk

(cid:104)σ(vec(σ([r, h] ∗ Ω))W ), t(cid:105)

−(cid:107)h ◦ r − t(cid:107)2

h, r, t ∈ Ck,|ri| = 1

Table 1: The score functions fr(h, t) of several knowledge graph embedding models, where (cid:104)·(cid:105)
denotes the generalized dot product, ◦ denotes the Hadamard product, ⊗ denotes circular correlation,
σ denotes activation function and ∗ denotes 2D convolution.
· denotes conjugate for complex
vectors, and 2D reshaping for real vectors in ConvE model. TransX represents a wide range of
TransE’s variants, such as TransH (Wang et al., 2014), TransR (Lin et al., 2015b), and STransE
(Nguyen et al., 2016), where gr,i(·) denotes a matrix multiplication with respect to relation r.

Yang et al., 2014; Trouillon et al., 2016). For example, the TransE model (Bordes et al., 2011),
which represents relations as translations, aims to model the inversion and composition patterns; the
DisMult model (Yang et al., 2014), which models the three-way interactions between head entities,
relations, and tail entities, aims to model the symmetry pattern. However, none of existing models is
capable of modeling and inferring all the above patterns. Therefore, we are looking for an approach
that is able to model and infer all the three types of relation patterns.
In this paper, we propose such an approach called RotatE for knowledge graph embedding. Our
motivation is from Euler’s identity eiθ = cos θ + i sin θ, which indicates that a unitary complex
number can be regarded as a rotation in the complex plane. Speciﬁcally, the RotatE model maps
the entities and relations to the complex vector space and deﬁnes each relation as a rotation from
the source entity to the target entity. Given a triplet (h, r, t), we expect that t = h ◦ r, where
h, r, t ∈ Ck are the embeddings, the modulus |ri| = 1 and ◦ denotes the Hadamard (element-wise)
product. Speciﬁcally, for each dimension in the complex space, we expect that:

ti = hiri, where hi, ri, ti ∈ C and |ri| = 1.

(1)

It turns out that such a simple operation can effectively model all the three relation patterns: sym-
metric/antisymmetric, inversion, and composition. For example, a relation r is symmetric if and
only if each element of its embedding r, i.e. ri, satisﬁes ri = e0/iπ = ±1; two relations r1 and r2
are inverse if and only if their embeddings are conjugates: r2 = ¯r1; a relation r3 = eiθ3 is a combi-
nation of other two relations r1 = eiθ1 and r2 = eiθ2 if and only if r3 = r1◦ r2 (i.e. θ3 = θ1 + θ2).
Moreover, the RotatE model is scalable to large knowledge graphs as it remains linear in both time
and memory.
To effectively optimizing the RotatE, we further propose a novel self-adversarial negative sampling
technique, which generates negative samples according to the current entity and relation embed-
dings. The proposed technique is very general and can be applied to many existing knowledge graph
embedding models. We evaluate the RotatE on four large knowledge graph benchmark datasets in-
cluding FB15k (Bordes et al., 2013), WN18 (Bordes et al., 2013), FB15k-237 (Toutanova & Chen,
2015) and WN18RR (Dettmers et al., 2017). Experimental results show that the RotatE model sig-
niﬁcantly outperforms existing state-of-the-art approaches. In addition, RotatE also outperforms
state-of-the-art models on Countries (Bouchard et al., 2015), a benchmark explicitly designed for
composition pattern inference and modeling. To the best of our knowledge, RotatE is the ﬁrst model
that achieves state-of-the-art performance on all the benchmarks.1

2 RELATED WORK

1The codes of our paper are available online: https://github.com/DeepGraphLearning/

2The p-norm of a complex vector v is deﬁned as (cid:107)v(cid:107)p = p(cid:112)(cid:80)|vi|p. We use L1-norm for all distance-

KnowledgeGraphEmbedding.
based models in this paper and drop the subscript of (cid:107)·(cid:107)1 for brevity.

2

Published as a conference paper at ICLR 2019

Model

SE

TransE
TransX
DistMult
ComplEx
RotatE

−(cid:107)Wr,1h − Wr,2t(cid:107)

Score Function
−(cid:107)h + r − t(cid:107)

−(cid:107)gr,1(h) + r − gr,2(t)(cid:107)

(cid:104)h, r, t(cid:105)

Re((cid:104)h, r, t(cid:105))
−(cid:107)h ◦ r − t(cid:107)

Symmetry Antisymmetry

Inversion Composition





























Table 2: The pattern modeling and inference abilities of several models.

Predicting missing links with knowledge graph embedding (KGE) methods has been extensively
investigated in recent years. The general methodology is to deﬁne a score function for the triplets.
Formally, let E denote the set of entities and R denote the set of relations, then a knowledge graph
is a collection of factual triplets (h, r, t), where h, t ∈ E and r ∈ R. Since entity embeddings are
usually represented as vectors, the score function usually takes the form fr(h, t), where h and t are
head and tail entity embeddings. The score function fr(h, t) measures the salience of a candidate
triplet (h, r, t). The goal of the optimization is usually to score true triplet (h, r, t) higher than the
corrupted false triplets (h(cid:48), r, t) or (h, r, t(cid:48)). Table 1 summarizes different score functions fr(h, t)
in previous state-of-the-art methods as well as the model proposed in this paper. These models gen-
erally capture only a portion of the relation patterns. For example, TransE represents each relation
as a bijection between source entities and target entities, and thus implicitly models inversion and
composition of relations, but it cannot model symmetric relations; ComplEx extends DistMult by
introducing complex embeddings so as to better model asymmetric relations, but it cannot infer the
composition pattern. The proposed RotatE model leverages the advantages of both.
A relevant and concurrent work to our work is the TorusE (Ebisu & Ichise, 2018) model, which
deﬁnes knowledge graph embedding as translations on a compact Lie group. The TorusE model
can be regarded as a special case of RotatE, where the modulus of embeddings are set ﬁxed; our
RotatE is deﬁned on the entire complex space, which has much more representation capacity. Our
experiments show that this is very critical for modeling and inferring the composition patterns.
Moreover, TorusE focuses on the problem of regularization in TransE while this paper focuses on
modeling and inferring multiple types of relation patterns.
There are also a large body of relational approaches for modeling the relational patterns on knowl-
edge graphs (Lao et al., 2011; Neelakantan et al., 2015; Das et al., 2016; Rockt¨aschel & Riedel,
2017; Yang et al., 2017). However, these approaches mainly focus on explicitly modeling the rela-
tional paths while our proposed RotatE model implicitly learns the relation patterns, which is not
only much more scalable but also provides meaningful embeddings for both entities and relations.
Another related problem is how to effectively draw negative samples for training knowledge graph
embeddings. This problem has been explicitly studied by Cai & Wang (2017), which proposed a
generative adversarial learning framework to draw negative samples. However, such a framework
requires simultaneously training the embedding model and a discrete negative sample generator,
which are difﬁcult to optimize and also computationally expensive. We propose a self-adversarial
sampling scheme which only relies on the current model. It does require any additional optimization
component, which make it much more efﬁcient.

3 ROTATE: RELATIONAL ROTATION IN COMPLEX VECTOR SPACE

In this section, we introduce our proposed RotatE model. We ﬁrst introduce three important relation
patterns that are widely studied in the literature of link prediction on knowledge graphs. Afterwards,
we introduce our proposed RotatE model, which deﬁnes relations as rotations in complex vector
space. We also show that the RotatE model is able to model and infer all three relation patterns.

3.1 MODELING AND INFERRING RELATION PATTERNS

The key of link prediction in knowledge graph is to infer the connection patterns, e.g., relation
patterns, with observed facts. According to the existing literature (Trouillon et al., 2016; Toutanova
& Chen, 2015; Guu et al., 2015; Lin et al., 2015a), three types of relation patterns are very important

3

Published as a conference paper at ICLR 2019

(a) TransE models r as
translation in real line.

(b) RotatE models r as ro-
tation in complex plane.

(c) RotatE: an example of
modeling symmetric rela-
tions r with ri = −1

Figure 1: Illustrations of TransE and RotatE with only 1 dimension of embedding.

and widely spread in knowledge graphs: symmetry, inversion and composition. We give their formal
deﬁnition here:
Deﬁnition 1. A relation r is symmetric (antisymmetric) if ∀x, y

r(x, y) ⇒ r(y, x) ( r(x, y) ⇒ ¬r(y, x) )

A clause with such form is a symmetry (antisymmetry) pattern.
Deﬁnition 2. Relation r1 is inverse to relation r2 if ∀x, y
r2(x, y) ⇒ r1(y, x)

A clause with such form is a inversion pattern.
Deﬁnition 3. Relation r1 is composed of relation r2 and relation r3 if ∀x, y, z

r2(x, y) ∧ r3(y, z) ⇒ r1(x, z)

A clause with such form is a composition pattern.

According to the deﬁnition of the above three types of relation patterns, we provide an analysis of
existing models on their abilities in inferring and modeling these patterns. Speciﬁcally, we provide
an analysis on TransE, TransX, DistMult, and ComplEx.3 We did not include the analysis on HolE
and ConvE since HolE is equivalent to ComplEx (Hayashi & Shimbo, 2017), and ConvE is a black
box that involves two-layer neural networks and convolution operations, which are hard to analyze.
The results are summarized into Table 2. We can see that no existing approaches are capable of
modeling all the three relation patterns.

3.2 MODELING RELATIONS AS ROTATIONS IN COMPLEX VECTOR SPACE

In this part, we introduce our proposed model that is able to model and infer all the three types of
relation patterns. Inspired by Euler’s identity, we map the head and tail entities h, t to the complex
embeddings, i.e., h, t ∈ Ck; then we deﬁne the functional mapping induced by each relation r as
an element-wise rotation from the head entity h to the tail entity t. In other words, given a triple
(h, r, t), we expect that:

(2)
and ◦ is the Hadmard (or element-wise) product. Speciﬁcally, for each element in the embeddings,
we have ti = hiri. Here, we constrain the modulus of each element of r ∈ Ck, i.e., ri ∈ C,
to be |ri| = 1. By doing this, ri is of the form eiθr,i, which corresponds to a counterclockwise
rotation by θr,i radians about the origin of the complex plane, and only affects the phases of the
entity embeddings in the complex vector space. We refer to the proposed model as RotatE due to its
rotational nature. According to the above deﬁnition, for each triple (h, r, t), we deﬁne the distance
function of RotatE as:

t = h ◦ r, where |ri| = 1,

dr(h, t) = (cid:107)h ◦ r − t(cid:107)

(3)

By deﬁning each relation as a rotation in the complex vector spaces, RotatE can model and infer all
the three types of relation patterns introduced above. Formally, we have following results4:

3See discussion at Appendix A
4We relegate all proofs to the appendix.

4

Published as a conference paper at ICLR 2019

Dataset
FB15k
WN18

FB15k-237
WN18RR

#entity
14,951
40,943
14,541
40,943

#relation

1,345

18
237
11

#training
483,142
141,442
272,115
86,835

#validation

50,000
5,000
17,535
3,034

#test
59,071
5,000
20,466
3,134

Table 3: Number of entities, relations, and observed triples in each split for four benchmarks.

Lemma 1. RotatE can infer the symmetry/antisymmetry pattern. (See proof in Appendix B)
Lemma 2. RotatE can infer the inversion pattern. (See proof in Appendix C)
Lemma 3. RotatE can infer the composition pattern. (See proof in Appendix D)

These results are also summarized into Table 2. We can see that the RotatE model is the only model
that can model and infer all the three types of relation patterns.

Connection to TransE. From Table 2, we can see that TransE is able to infer and model all the
other relation patterns except the symmetry pattern. The reason is that in TransE, any symmetric
relation will be represented by a 0 translation vector. As a result, this will push the entities with
symmetric relations to be close to each other in the embedding space. RotatE solves this problem
and is a able to model and infer the symmetry pattern. An arbitrary vector r that satisﬁes ri = ±1
can be used for representing a symmetric relation in RotatE, and thus the entities having symmetric
relations can be distinguished. Different symmetric relations can be also represented with different
embedding vectors. Figure 1 provides illustrations of TransE and RotatE with only 1-dimensional
embedding and shows how RotatE models a symmetric relation.

3.3 OPTIMIZATION

Negative sampling has been proved quite effective for both learning knowledge graph embedding
(Trouillon et al., 2016) and word embedding (Mikolov et al., 2013). Here we use a loss function
similar to the negative sampling loss (Mikolov et al., 2013) for effectively optimizing distance-based
models:

L = − log σ(γ − dr(h, t)) − n(cid:88)

log σ(dr(h(cid:48)

i, t(cid:48)

i) − γ),

1
k

(4)

i=1

where γ is a ﬁxed margin, σ is the sigmoid function, and (h(cid:48)
We also propose a new approach for drawing negative samples. The negative sampling loss samples
the negative triplets in a uniform way. Such a uniform negative sampling suffers the problem of
inefﬁciency since many samples are obviously false as training goes on, which does not provide
any meaningful information. Therefore, we propose an approach called self-adversarial negative
sampling, which samples negative triples according to the current embedding model. Speciﬁcally,
we sample negative triples from the following distribution:

i) is the i-th negative triplet.

i, r, t(cid:48)

p(h(cid:48)

j, r, t(cid:48)

j|{(hi, ri, ti)}) =

(cid:80)

j, t(cid:48)
exp αfr(h(cid:48)
j)
i exp αfr(h(cid:48)
i, t(cid:48)
i)

(5)

where α is the temperature of sampling. Moreover, since the sampling procedure may be costly,
we treat the above probability as the weight of the negative sample. Therefore, the ﬁnal negative
sampling loss with self-adversarial training takes the following form:

L = − log σ(γ − dr(h, t)) − n(cid:88)

p(h(cid:48)

i, r, t(cid:48)

i) log σ(dr(h(cid:48)

i, t(cid:48)

i) − γ)

(6)

In the experiments, we will compare different approaches for negative sampling.

i=1

5

Published as a conference paper at ICLR 2019

4 EXPERIMENTS

4.1 EXPERIMENTAL SETTING

We evaluate our proposed model on four widely used knowledge graphs. The statistics of these
knowledge graphs are summarized into Table 3.

• FB15k (Bordes et al., 2013) is a subset of Freebase (Bollacker et al., 2008), a large-scale
knowledge graph containing general knowledge facts. Toutanova & Chen (2015) showed
that almost 81% of the test triplets (x, r, y) can be inferred via a directly linked triplet
(x, r(cid:48), y) or (y, r(cid:48), x). Therefore, the key of link prediction on FB15k is to model and infer
the symmetry/antisymmetry and inversion patterns.
• WN18 (Bordes et al., 2013) is a subset of WordNet (Miller, 1995), a database featuring
lexical relations between words. This dataset also has many inverse relations. So the main
relation patterns in WN18 are also symmetry/antisymmetry and inversion.

• FB15k-237 (Toutanova & Chen, 2015) is a subset of FB15k, where inverse relations are
deleted. Therefore, the key of link prediction on FB15k-237 boils down to model and infer
the symmetry/antisymmetry and composition patterns.

• WN18RR (Dettmers et al., 2017) is a subset of WN18. The inverse relations are deleted,

and the main relation patterns are symmetry/antisymmetry and composition.

Hyperparameter Settings. We use Adam (Kingma & Ba, 2014) as the optimizer and ﬁne-tune the
hyperparameters on the validation dataset. The ranges of the hyperparameters for the grid search are
set as follows: embedding dimension5 k ∈ {125, 250, 500, 1000}, batch size b ∈ {512, 1024, 2048},
self-adversarial sampling temperature α ∈ {0.5, 1.0}, and ﬁxed margin γ ∈ {3, 6, 9, 12, 18, 24, 30}.
Both the real and imaginary parts of the entity embeddings are uniformly initialized, and the phases
of the relation embeddings are uniformly initialized between 0 and 2π. No regularization is used
since we ﬁnd that the ﬁxed margin γ could prevent our model from over-ﬁtting.

Evaluation Settings. We evaluate the performance of link prediction in the ﬁltered setting: we
rank test triples against all other candidate triples not appearing in the training, validation, or test
set, where candidates are generated by corrupting subjects or objects: (h(cid:48), r, t) or (h, r, t(cid:48)). Mean
Rank (MR), Mean Reciprocal Rank (MRR) and Hits at N (H@N) are standard evaluation measures
for these datasets and are evaluated in our experiments.

2C(cid:13)(cid:13)sin θh+θr−θt

Baseline. Apart from RotatE, we propose a variant of RotatE as baseline, where the modulus of
|hi| = |ti| = C, and the distance function is thus
the entity embeddings are also constrained:

(cid:13)(cid:13) (See Equation 17 at Appendix F for a detailed derivation). In this way, we can

investigate how RotatE works without modulus information and with only phase information. We
refer to the baseline as pRotatE. It is obvious to see that pRotatE can also model and infer all the
three relation patterns.

2

4.2 MAIN RESULTS

We compare RotatE to several state-of-the-art models, including TransE (Bordes et al., 2013), Dist-
Mult (Yang et al., 2014), ComplEx (Trouillon et al., 2016), HolE (Nickel et al., 2016), and ConvE
(Dettmers et al., 2017), as well as our baseline model pRotatE, to empirically show the importance
of modeling and inferring the relation patterns for the task of predicting missing links.
Table 4 summarizes our results on FB15k and WN18. We can see that RotatE outperforms all the
state-of-the-art models. The performance of pRotatE and RotatE are similar on these two datasets.
Table 5 summarizes our results on FB15k-237 and WN18RR, where the improvement is much
more signiﬁcant. The difference between RotatE and pRotatE is much larger on FB15k-237 and

5Following Trouillon et al. (2016), we treat complex number as the same as real number with regard to the
embedding dimension. If the same number of dimension is used for both the real and imaginary parts of the
complex number as the real number, the number of parameters for the complex embedding would be twice the
number of parameters for the embeddings in the real space.

6

Published as a conference paper at ICLR 2019

FB15k

WN18

-

-

TransE [♥]
DistMult [♦]

HolE

ComplEx
ConvE
pRotatE
RotatE

-

.578

-

.297

MR MRR H@1 H@3 H@10 MR MRR H@1 H@3 H@10
.943
.946
.949
.947
.956
.957
.959

.495
.797
.938
.941
.943
.947
.949

.749
.893
.739
.840
.831
.884
.884

.463
.798
.524
.692
.657
.799
.797

-
655
-
-
374
254
309

.402
.599
.558
.750
.746

.945
.945
.946
.950
.952

.930
.936
.935
.942
.944

.613
.759
.723
.829
.830

-
42
-
-
51
43
40

.113

.888

Table 4: Results of several models evaluated on the FB15K and WN18 datasets. Results of [♥] are
taken from (Nickel et al., 2016) and results of [♦] are taken from (Kadlec et al., 2017). Other results
are taken from the corresponding original papers.

FB15k-237

WN18RR

TransE [♥]
DistMult
ComplEx
ConvE
pRotatE
RotatE

-

-

MR MRR H@1 H@3 H@10 MR MRR H@1 H@3 H@10
.501
357
.49
254
339
.51
.52
244
.552
178
177
.571

3384
5110
5261
4187
2923
3340

.226
.43
.44
.43
.462
.476

.294
.241
.247
.325
.328
.338

.465
.419
.428
.501
.524
.533

-
.39
.41
.40
.417
.428

-
.44
.46
.44
.479
.492

.155
.158
.237
.230
.241

.263
.275
.356
.365
.375

Table 5: Results of several models evaluated on the FB15k-237 and WN18RR datasets. Results of
[♥] are taken from (Nguyen et al., 2017). Other results are taken from (Dettmers et al., 2017).

WN18RR, where there are a lot of composition patterns. This indicates that modulus is very impor-
tant for modeling and inferring the composition pattern.
Moreover, the performance of these models on different datasets is consistent with our analysis on
the three relation patterns (Table 2):

• On FB15K, the main relation patterns are symmetry/antisymmetry and inversion. We
can see that ComplEx performs well while TransE does not perform well since Com-
plEx can infer both symmetry/antisymmetry and inversion patterns while TransE can-
not infer symmetry pattern. Surprisingly, DistMult achieves good performance on this
dataset although it cannot model the antisymmetry and inversion patterns. The reason
is that for most of the relations in FB15K, the types of head entities and tail entities
are different. Although DistMult gives the same score to a true triplet (h, r, t) and
its opposition triplet (t, r, h), (t, r, h) is usually impossible to be valid since the en-
tity type of t does not match the head entity type of h. For example, DistMult assigns
the same score to (Obama, nationality, USA) and (USA, nationality, Obama). But
(USA, nationality, Obama) can be simply predicted as false since USA cannot be the head
entity of the relation nationality.

• On WN18, the main relation patterns are also symmetry/antisymmetry and inversion. As
expected, ComplEx still performs very well on this dataset. However, different from the
results on FB15K, the performance of DistMult signiﬁcantly decreases on WN18. The
reason is that DistMult cannot model antisymmetry and inversion patterns, and almost all
the entities in WN18 are words and belong to the same entity type, which do not have the
same problem as FB15K.

• On FB15k-237, the main relation pattern is composition. We can see that TransE performs
really well while ComplEx does not perform well. The reason is that, as discussed before,
TransE is able to infer the composition pattern while ComplEx cannot infer the composition
pattern.

• On WN18RR, one of the main relation patterns is the symmetry pattern since almost each
word has a symmetric relation in WN18RR, e.g., also see and similar to. TransE does
not well on this dataset since it is not able to model the symmetric relations.

7

Published as a conference paper at ICLR 2019

Countries (AUC-PR)
ConvE

DistMult
1.00 ± 0.00
0.72 ± 0.12
0.52 ± 0.07

S1
S2
S3

ComplEx
0.97 ± 0.02
0.57 ± 0.10
0.43 ± 0.07

1.00 ± 0.00
0.99 ± 0.01
0.86 ± 0.05

RotatE

1.00 ± 0.00
1.00 ± 0.00
0.95 ± 0.00

Table 6: Results on the Countries datasets. Other results are taken from (Dettmers et al., 2017).

(a) similar to

(b) hypernym

(c) hypernym ◦ hyponym

(d) for1

(e) winner

2 ◦winner◦for1
−1
Figure 2: Histograms of relation embedding phases {θr,i} (ri = eiθr,i ), where for1 represents
award nominee/award nominations./award/award nomination/nominated for,
relation
winner represents relation award category/winners./award/award honor/award winner
and for2 represents award category/nominees./award/award nomination/nominated for.
The symmetry,
inversion and composition pattern is represented in Figure 2a, 2c and 2g,
respectively.

(f) for2

(g) for

4.3

INFERRING RELATION PATTERNS ON COUNTRIES DATASET

We also evaluate our model on the Countries dataset (Bouchard et al., 2015; Nickel et al., 2016),
which is carefully designed to explicitly test the capabilities of the link prediction models for com-
position pattern modeling and inferring. It contains 2 relations and 272 entities (244 countries, 5
regions and 23 subregions). Unlike link prediction on general knowledge graphs, the queries in
Countries are of the form locatedIn(c, ?), and the answer is one of the ﬁve regions. The Coun-
tries dataset has 3 tasks, each requiring inferring a composition pattern with increasing length and
difﬁculty. For example, task S2 requires inferring a relatively simpler composition pattern:

neighborOf(c1, c2) ∧ locatedIn(c2, r) ⇒ locatedIn(c1, r),

while task S3 requires inferring the most complex composition pattern:

neighborOf(c1, c2) ∧ locatedIn(c2, s) ∧ locatedIn(s, r) ⇒ locatedIn(c1, r).

In Table 6, we report the results with respect to the AUC-PR metric, which is commonly used in the
literature. We can see that RotatE outperforms all the previous models. The performance of RotatE
is signiﬁcantly better than other methods on S3, which is the most difﬁcult task.

4.4

IMPLICIT RELATION PATTERN INFERENCE

In this section, we verify whether the relation patterns are implicitly represented by RotatE relation
embeddings. We ignore the speciﬁc positions in the relation embedding θr and plot the histogram
of the phase of each element in the relation embedding, i.e., {θr,i}.
Symmetry pattern requires the symmetric relations to have property r ◦ r = 1, and the solution is
ri = ±1. We investigate the relation embeddings from a 500-dimensional RotatE trained on WN18.
Figure 2a gives the histogram of the embedding phases of a symmetric relation similar to. We can
ﬁnd that the embedding phases are either π (ri = −1) or 0, 2π (ri = 1). It indicates that the RotatE

8

0 π1 π2 π0501001500 π1 π2 π051015200 π1 π2 π01002000 π1 π2 π01020300 π1 π2 π0510150 π1 π2 π0510150 π1 π2 π0100200300400Published as a conference paper at ICLR 2019

uniform

KBGAN (Cai & Wang, 2017)

self-adversarial

FB15k-237

WN18RR

WN18

MRR H@10 MRR H@10 MRR H@10
.915
.242
.949
.278
.298
.947

.422
.453
.475

.186
.210
.223

.459
.479
.510

.433
.705
.736

Table 7: TransE with different negative sampling techniques. The results in ﬁrst 2 rows are taken
from (Cai & Wang, 2017), where KBGAN uses a ComplEx negative sample generator.

FB15k

FB15k-237

MRR H@10 MRR H@10
.531
.735
.509
.780
.797
.533

.332
.319
.338

.871
.890
.884

TransE
ComplEx
RotatE

S1

1.00 ± 0.00
1.00 ± 0.00
1.00 ± 0.00

Countries (AUC-ROC)

S2

1.00 ± 0.00
0.98 ± 0.00
1.00 ± 0.00

S3

0.96 ± 0.00
0.88 ± 0.01
0.95 ± 0.00

Table 8: Results of TransE and ComplEx with self-adversarial sampling and negative sampling loss
on FB15k, FB15k-237 and Countries datasets.

model does infer and model the symmetry pattern. Figure 2b is the histogram of relation hypernym,
which shows that the embedding of a general relation does not have such a ±1 pattern.
Inversion pattern requires the embeddings of a pair of inverse relations to be conjugate. We use the
same RotatE model trained on WN18 for an analysis. Figure 2c illustrates the element-wise addition
of the embedding phases from relation r1 = hypernym and its inversed relation r2 = hyponym. All
the additive embedding phases are 0 or 2π, which represents that r1 = r−1
2 . This case shows that
the inversion pattern is also inferred and modeled in the RotatE model.
Composition pattern requires the embedding phases of the composed relation to be the addition of
the other two relations. Since there is no signiﬁcant composition pattern in WN18, we study the
inference of the composition patterns on FB15k-237, where a 1000-dimensional RotatE is trained.
Figure 2d - 2g illustrate such a r1 = r2 ◦ r3 case, where θ2,i + θ3,i = θ1,i or θ2,i + θ3,i = θ1,i + 2π.
More results of implicitly inferring basic patterns are presented in the appendix.

4.5 COMPARING DIFFERENT NEGATIVE SAMPLING TECHNIQUES

In this part, we compare different negative sampling techniques including uniform sampling, our
proposed self-adversarial technique, and the KBGAN model (Cai & Wang, 2017), which aims to
optimize a generative adversarial network to generate the negative samples. We re-implement a 50-
dimension TransE model with the margin-based ranking criterion that was used in (Cai & Wang,
2017), and evaluate its performance on FB15k-237, WN18RR and WN18 with self-adversarial neg-
ative sampling. Table 7 summarizes our results. We can see that self-adversarial sampling is the
most effective negative sampling technique.

4.6 FURTHER EXPERIMENTS ON TRANSE AND COMPLEX

One may argue that the contribution of RotatE comes from the self-adversarial negative sampling
technique. In this part, we conduct further experiments on TransE and ComplEx in the same setting
as RotatE to make a fair comparison among the three models. Table 8 shows the results of TransE
and ComplEx trained with the self-adversarial negative sampling technique on FB15k and FB15k-
237 datasets, where a large number of relations are available. In addition, we evaluate these three
models on the Countries dataset, which explicitly requires inferring the composition pattern. We
also provide a detailed ablation study on TransE and RotatE in the appendix.
From Table 8, we can see that similar results are observed as Table 4 and 5. The RotatE model
achieves the best performance on both FB15k and FB15k-237, as it is able to model all the three
relation patterns. The TransE model does not work well on the FB15k datasets, which requires
modeling the symmetric pattern; the ComplEx model does not work well on FB15k-237, which
requires modeling the composition pattern. The results on the Countries dataset are a little bit
different, where the TransE model slightly outperforms RoateE on the S3 task. The reason is that

9

Relation Category

1-to-1

1-to-N N-to-1 N-to-N 1-to-1

1-to-N N-to-1 N-to-N

Prediction Head (Hits@10)

Prediction Tail (Hits@10)

Published as a conference paper at ICLR 2019

Tasks
TransE

TransH (bern)

KG2E KL (bern)

TransE
ComplEx
RotatE
Tasks
TransE
ComplEx
RotatE

.437
.668
.923
.894
.939
.922

.701
.832
.878

.657
.876
.946
.972
.969
.967

.912
.914
.934

.182
.287
.660
.567
.692
.602

.424
.543
.465

.472
.645
.696
.880
.893
.893

.737
.787
.803

.437
.655
.926
.879
.938
.923

.701
.826
.872

.197
.398
.679
.671
.823
.713

.561
.661
.611

.667
.833
.944
.964
.952
.961

.894
.869
.909

.500
.672
.734
.910
.910
.922

.761
.800
.832

Prediction Head (MRR)

Prediction Tail (MRR)

Table 9: Experimental results on FB15k by relation category. The ﬁrst three rows are taken from
(He et al., 2015). The rest of the results are from RotatE trained with the self-adversarial negative
sampling technique.

the Countries datasets do not have the symmetric relation between different regions, and all the
three tasks in the Countries datasets only require inferring the region for a given city. Therefore, the
TransE model does not suffer from its inability of modeling symmetric relations. For ComplEx, we
can see that it does not perform well on Countries since it cannot infer the composition pattern.

4.7 EXPERIMENTAL RESULTS ON FB15K BY RELATION CATEGORY

We also did some further investigation on the performance of RotatE on different relation categories:
one-to-many, many-to-one, and many-to-many relations6. The results of RotatE on different relation
categories on the data set FB15k are summarized into Table 9. We also compare an additional
approach KG2E KL (He et al., 2015), which is a probabilistic framework for knowledge graph
embedding methods and aims to model the uncertainties of the entities and relations in knowledge
graphs with the TransE model. We also summarize the statistics of different relation categories into
Table 10 in the appendix.
We can see that besides the one-to-one relation, the RotatE model also performs quite well on the
non-injective relations, especially on many-to-many relations. We also notice that the probabilistic
framework KG2E KL(bern) (He et al., 2015) is quite powerful, which consistently outperforms
its corresponding knowledge graph embedding model, showing the importance of modeling the
uncertainties in knowledge graphs. We leave the work of modeling the uncertainties in knowledge
graphs with RotatE as our future work.

5 CONCLUSION

We have proposed a new knowledge graph embedding method called RotatE, which represents enti-
ties as complex vectors and relations as rotations in complex vector space. In addition, we propose a
novel self-adversarial negative sampling technique for efﬁciently and effectively training the RotatE
model. Our experimental results show that the RotatE model outperforms all existing state-of-the-
art models on four large-scale benchmarks. Moreover, RotatE also achieves state-of-the-art results
on a benchmark that is explicitly designed for composition pattern inference and modeling. A deep
investigation into RotatE relation embeddings shows that the three relation patterns are implicitly
represented in the relation embeddings. In the future, we plan to evaluate the RotatE model on more
datasets and leverage a probabilistic framework to model the uncertainties of entities and relations.

6Following Wang et al. (2014), for each relation r, we compute the average number of tails per head (tphr)
and the average number of head per tail (hptr). If tphr < 1.5 and hptr < 1.5, r is treated as one-to-one; if
tphr ≥ 1.5 and hptr ≥ 1.5, r is treated as a many-to-many; if tphr < 1.5 and hptr ≥ 1.5, r is treated as
one-to-many.

10

Published as a conference paper at ICLR 2019

REFERENCES
Kurt Bollacker, Colin Evans, Praveen Paritosh, Tim Sturge, and Jamie Taylor. Freebase: a collab-
oratively created graph database for structuring human knowledge. In Proceedings of the 2008
ACM SIGMOD international conference on Management of data, pp. 1247–1250. AcM, 2008.

Antoine Bordes, Jason Weston, Ronan Collobert, Yoshua Bengio, et al. Learning structured embed-

dings of knowledge bases. In AAAI, volume 6, pp. 6, 2011.

Antoine Bordes, Nicolas Usunier, Alberto Garcia-Duran, Jason Weston, and Oksana Yakhnenko.
Translating embeddings for modeling multi-relational data. In Advances in neural information
processing systems, pp. 2787–2795, 2013.

Guillaume Bouchard, Sameer Singh, and Theo Trouillon. On approximate reasoning capabilities
of low-rank vector spaces. AAAI Spring Syposium on Knowledge Representation and Reasoning
(KRR): Integrating Symbolic and Neural Approaches, 2015.

Liwei Cai and William Yang Wang. Kbgan: Adversarial learning for knowledge graph embeddings.

arXiv preprint arXiv:1711.04071, 2017.

Rajarshi Das, Arvind Neelakantan, David Belanger, and Andrew McCallum. Chains of rea-
arXiv preprint

soning over entities, relations, and text using recurrent neural networks.
arXiv:1607.01426, 2016.

Tim Dettmers, Pasquale Minervini, Pontus Stenetorp, and Sebastian Riedel. Convolutional 2d

knowledge graph embeddings. arXiv preprint arXiv:1707.01476, 2017.

Takuma Ebisu and Ryutaro Ichise. Toruse: Knowledge graph embedding on a lie group. In Pro-
ceedings of the Thirty-Second AAAI Conference on Artiﬁcial Intelligence, pp. 1819–1826. AAAI
Press, 2018.

Kelvin Guu, John Miller, and Percy Liang. Traversing knowledge graphs in vector space. arXiv

preprint arXiv:1506.01094, 2015.

Yanchao Hao, Yuanzhe Zhang, Kang Liu, Shizhu He, Zhanyi Liu, Hua Wu, and Jun Zhao. An end-
to-end model for question answering over knowledge base with cross-attention combining global
In Proceedings of the 55th Annual Meeting of the Association for Computational
knowledge.
Linguistics (Volume 1: Long Papers), volume 1, pp. 221–231, 2017.

Katsuhiko Hayashi and Masashi Shimbo. On the equivalence of holographic and complex embed-

dings for link prediction. arXiv preprint arXiv:1702.05563, 2017.

Shizhu He, Kang Liu, Guoliang Ji, and Jun Zhao. Learning to represent knowledge graphs with
gaussian embedding. In Proceedings of the 24th ACM International on Conference on Information
and Knowledge Management, pp. 623–632. ACM, 2015.

Rudolf Kadlec, Ondrej Bajgar, and Jan Kleindienst. Knowledge base completion: Baselines strike

back. arXiv preprint arXiv:1705.10744, 2017.

Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. arXiv preprint

arXiv:1412.6980, 2014.

Ni Lao, Tom Mitchell, and William W Cohen. Random walk inference and learning in a large scale
knowledge base. In Proceedings of the Conference on Empirical Methods in Natural Language
Processing, pp. 529–539. Association for Computational Linguistics, 2011.

Yankai Lin, Zhiyuan Liu, Huanbo Luan, Maosong Sun, Siwei Rao, and Song Liu. Modeling relation
paths for representation learning of knowledge bases. arXiv preprint arXiv:1506.00379, 2015a.

Yankai Lin, Zhiyuan Liu, Maosong Sun, Yang Liu, and Xuan Zhu. Learning entity and relation

embeddings for knowledge graph completion. In AAAI, volume 15, pp. 2181–2187, 2015b.

Farzaneh Mahdisoltani, Joanna Biega, and Fabian M Suchanek. Yago3: A knowledge base from

multilingual wikipedias. In CIDR, 2013.

11

Published as a conference paper at ICLR 2019

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Corrado, and Jeff Dean. Distributed represen-
tations of words and phrases and their compositionality. In Advances in neural information pro-
cessing systems, pp. 3111–3119, 2013.

George A Miller. Wordnet: a lexical database for english. Communications of the ACM, 38(11):

39–41, 1995.

Arvind Neelakantan, Benjamin Roth, and Andrew McCallum. Compositional vector space models

for knowledge base completion. arXiv preprint arXiv:1504.06662, 2015.

Dai Quoc Nguyen, Tu Dinh Nguyen, Dat Quoc Nguyen, and Dinh Phung. A novel embedding
model for knowledge base completion based on convolutional neural network. arXiv preprint
arXiv:1712.02121, 2017.

Dat Quoc Nguyen, Kairit Sirts, Lizhen Qu, and Mark Johnson. Stranse: a novel embedding model

of entities and relationships in knowledge bases. arXiv preprint arXiv:1606.08140, 2016.

Maximilian Nickel, Lorenzo Rosasco, Tomaso A Poggio, et al. Holographic embeddings of knowl-

edge graphs. In AAAI, volume 2, pp. 3–2, 2016.

Tim Rockt¨aschel and Sebastian Riedel. End-to-end differentiable proving. In Advances in Neural

Information Processing Systems, pp. 3788–3800, 2017.

Fabian M Suchanek, Gjergji Kasneci, and Gerhard Weikum. Yago: a core of semantic knowledge.
In Proceedings of the 16th international conference on World Wide Web, pp. 697–706. ACM,
2007.

Kristina Toutanova and Danqi Chen. Observed versus latent features for knowledge base and text
inference. In Proceedings of the 3rd Workshop on Continuous Vector Space Models and their
Compositionality, pp. 57–66, 2015.

Th´eo Trouillon, Johannes Welbl, Sebastian Riedel, ´Eric Gaussier, and Guillaume Bouchard. Com-
plex embeddings for simple link prediction. In International Conference on Machine Learning,
pp. 2071–2080, 2016.

Zhen Wang, Jianwen Zhang, Jianlin Feng, and Zheng Chen. Knowledge graph embedding by trans-

lating on hyperplanes. In AAAI, volume 14, pp. 1112–1119, 2014.

Chenyan Xiong, Russell Power, and Jamie Callan. Explicit semantic ranking for academic search
via knowledge graph embedding. In Proceedings of the 26th international conference on world
wide web, pp. 1271–1279. International World Wide Web Conferences Steering Committee, 2017.

Bishan Yang and Tom Mitchell. Leveraging knowledge bases in lstms for improving machine read-
ing. In Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics
(Volume 1: Long Papers), volume 1, pp. 1436–1446, 2017.

Bishan Yang, Wen-tau Yih, Xiaodong He, Jianfeng Gao, and Li Deng. Embedding entities and
relations for learning and inference in knowledge bases. arXiv preprint arXiv:1412.6575, 2014.

Fan Yang, Zhilin Yang, and William W Cohen. Differentiable learning of logical rules for knowledge

base completion. CoRR, abs/1702.08367, 2017.

Fuzheng Zhang, Nicholas Jing Yuan, Defu Lian, Xing Xie, and Wei-Ying Ma. Collaborative knowl-
In Proceedings of the 22nd ACM SIGKDD

edge base embedding for recommender systems.
international conference on knowledge discovery and data mining, pp. 353–362. ACM, 2016.

12

Published as a conference paper at ICLR 2019

APPENDIX

A DISCUSSION ON THE ABILITY OF PATTERN MODELING AND INFERENCE

No existing models are capable of modeling all the three relation patterns. For example, TransE
cannot model the symmetry pattern because it would yield r = 0 for symmetric relations; TransX
can infer and model the symmetry/antisymmetry pattern when gr,1 = gr,2, e.g. in TransH (Wang
et al., 2014), but cannot infer inversion and composition as gr,1 and gr,2 are invertible matrix mul-
tiplications; due to its symmetric nature, DistMult is difﬁcult to model the asymmetric and inver-
sion pattern; ComplEx addresses the problem of DisMult and is able to infer both the symmetry
and asymmetric patterns with complex embeddings. Moreover, it can infer inversion rules be-
cause the complex conjugate of the solution to arg maxr Re((cid:104)x, r, y(cid:105)) is exactly the solution to
arg maxr Re((cid:104)y, r, x(cid:105)). However, ComplEx cannot infer composition rules, since it does not model
a bijection mapping from h to t via relation r. These concerns are summarized in Table 2.

B PROOF OF LEMMA 1

Proof. if r(x, y) and r(y, x) hold, we have

Otherwise, if r(x, y) and ¬r(y, x) hold, we have

y = r ◦ x ∧ x = r ◦ y ⇒ r ◦ r = 1

y = r ◦ x ∧ x (cid:54)= r ◦ y ⇒ r ◦ r (cid:54)= 1

C PROOF OF LEMMA 2

Proof. if r1(x, y) and r2(y, x) hold, we have

y = r1 ◦ x ∧ x = r2 ◦ y ⇒ r1 = r−1

2

D PROOF OF LEMMA 3

Proof. if r1(x, z), r2(x, y) and r3(y, z) hold, we have

z = r1 ◦ x ∧ y = r2 ◦ x ∧ z = r3 ◦ y ⇒ r1 = r2 ◦ r3

E PROPERTIES OF ROTATE

A useful property for RotatE is that the inverse of a relation can be easily acquired by complex
conjugate. In this way, the RotatE model treats head and tail entities in a uniform way, which is
potentially useful for efﬁcient 1-N scoring (Dettmers et al., 2017):

(cid:107)h ◦ r − t(cid:107) = (cid:107)(h ◦ r − t) ◦ r(cid:107) = (cid:107)t ◦ r − h(cid:107)

(7)

Moreover, considering the embeddings in the polar form, i.e., hi = mh,ieiθh,i , ri = eiθr,i , ti =
mt,ieiθt,i, we can rewrite the RotatE distance function as:

(cid:107)h ◦ r − t(cid:107) =

(mh,i − mt,i)2 + 4mh,imt,i sin2 θh,i + θr,i − θt,i

2

(8)

(cid:114)

k(cid:88)

i=1

2C(cid:13)(cid:13)sin θh+θr−θt

2

This equation provides two interesting views of the model:
(1) When we constrain the modulus mh,i = mt,i = C, the distance function is reduced to
(cid:107)h + r − t(cid:107). Based on this intuition, we can show that:
Theorem 4. RotatE can degenerate into TransE. (See proof at Appendix F)

(cid:13)(cid:13). We can see that this is very similar to the distance function of TransE:

which indicates that RotatE is able to simulate TransE.
(2) The modulus provides the lower bound of the distance function, which is (cid:107)mh − mt(cid:107).

13

Published as a conference paper at ICLR 2019

Relation Category

#relation

#triplet (train)
#triplet (test)

1-to-1
326
6827
832

1-to-N N-to-1 N-to-N
308
42509
5259

388
70727
8637

363079
44343

323

Table 10: Statistics of FB15k by mapping properties of relations.

YAGO3-10

MR MRR H@1 H@3 H@10
5926
6351
1671
1767

.34
.36
.44
.495

.38
.40
.49
.550

.54
.55
.62
.670

.24
.26
.35
.402

DistMult
ComplEx
ConvE
RotatE

Table 11: Results of several models evaluated on the YAGO3-10 datasets. Other results are taken
from (Dettmers et al., 2017).

F PROOF OF THEOREM 4
Proof. By further restricting |hi| = |ti| = C, we can rewrite h, r, t by

h = Ceiθh = C cos θh + iC sin θh
r = eiθr = cos θr + i sin θr
t = Ceiθt = C cos θt + iC sin θt

= C (cid:107)cos(θh + θr − θt) − 1 + i sin(θh + θr − θt)(cid:107)

(cid:13)(cid:13)(cid:13)

(cid:13)(cid:13)(cid:13)ei(θh+θr) − eiθt
(cid:13)(cid:13)(cid:13) = C
(cid:13)(cid:13)(cid:13)ei(θh+θr−θt) − 1
(cid:13)(cid:13)(cid:13)(cid:13)(cid:113)
(cid:13)(cid:13)(cid:13)(cid:112)2 − 2 cos(θh + θr − θt)
(cid:13)(cid:13)(cid:13)
(cid:13)(cid:13)(cid:13)(cid:13)sin

θh + θr − θt

(cid:13)(cid:13)(cid:13)(cid:13)

2

(cos(θh + θr − θt) − 1)2 + sin2(θh + θr − θt)

(9)
(10)
(11)
(12)

(13)

(14)

(15)

(16)

(cid:13)(cid:13)(cid:13)(cid:13)

Therefore, we have

(cid:107)h ◦ r − t(cid:107) = C

= C

= C

(17)
If the embedding of (h, r, t) in TransE is h(cid:48), r(cid:48), t(cid:48), let θh = ch(cid:48), θr = cr(cid:48), θt = ct(cid:48) and C = 1/c ,
we have

= 2C

(cid:107)h ◦ r − t(cid:107) = (cid:107)h(cid:48) + r(cid:48) − t(cid:48)(cid:107)

lim
c→0

G LINK PREDICTION ON YAGO3-10

YAGO3-10 is a subset of YAGO3 (Mahdisoltani et al., 2013), which consists of entities that have a
minimum of 10 relations each. It has 123,182 entities and 37 relations. Most of the triples deal with
descriptive attributes of people, such as citizenship, gender, profession and marital status.
Table 11 shows that the RotatE model also outperforms state-of-the-art models on YAGO3-10.

H HYPERPARAMETERS

We list the best hyperparameter setting of RotatE w.r.t the validation dataset on several benchmarks
in Table 12.

14

Published as a conference paper at ICLR 2019

Benchmark

FB15k
WN18

FB15k-237
WN18RR
Countries S1
Countries S2
Countries S3
YAGO3-10

embedding dimension k

1000
500
1000
500
500
500
500
500

batch size b

2048
512
1024
512
512
512
512
1024

negative samples n

128
1024
256
1024
64
64
64
400

α
1.0
0.5
1.0
0.5
1.0
1.0
1.0
1.0

γ
24
12
9
6
0.1
0.1
0.1
24

Table 12: The best hyperparameter setting of RotatE on several benchmarks.

RotatE

TransE

MR MRR H@1 H@3 H@10 MR MRR H@1 H@3 H@10

w/ adv
w/o adv

w/ adv
w/o adv

177
185

225
199

.338
.297

.322
.293

.241
.205

.225
.202

negative sampling loss
.375
170
.328
175

.533
.480

margin-based ranking criterion

.358
.324

.516
.476

167
164

.332
.297

.333
.306

.233
.202

.237
.212

.372
.331

.370
.340

.531
.486

.522
.493

Table 13: Results of ablation study on FB15k-237, where “adv” represents “self-adversarial”.

I ABLATION STUDY

Table 13 shows our ablation study of self-adversarial sampling and negative sampling loss on
FB15k-237. We also re-implement a 1000-dimension TransE and do ablation study on it. From
the table, We can ﬁnd that self-adversarial sampling boosts the performance for both models, while
negative sampling loss is only effective on RotatE; in addition, our re-implementation of TransE
also outperforms all the state-of-the-art models on FB15k-237.

J VARIANCE OF THE RESULTS

In Table 14, We provide the average and variance of the MRR results on FB15k, WN18, FB15k-
237 and WN18RR. Both the average and the variance is calculated by three runs of RotatE with
difference random seeds. We can ﬁnd that the performance of RotatE is quite stable for different
random initialization.

K MORE RESULTS OF IMPLICIT BASIC PATTERN INFERENCE

We provide more histograms of embedding phases in Figure 3 - 5.

15

Published as a conference paper at ICLR 2019

MRR

FB15k

.797 ± .001

WN18

.949 ± .000

FB15k-237
.337 ± .001

WN18RR
.477 ± .001

Table 14: The average and variance of the MRR results of RotatE on FB15k, WN18, FB15k-237
and WN18RR.

(a) has part

(b) instance hypernym

(c) also see

(d) verb group

(e) derivationally related form

(f) similar to

Figure 3: Histograms of embedding phases from two general relations and four symmetric relations
on WN18. ( k = 500 )

16

0 π1 π2 π051015200 π1 π2 π05100 π1 π2 π0204060800 π1 π2 π0501000 π1 π2 π0501000 π1 π2 π050100150Published as a conference paper at ICLR 2019

(a) /celebrities/celebrity-
/celebrity friends./celebrities-
/friendship/friend

(b) /award/award winner-
/awards won./award/award honor-
/award winner

(c) /location/statistical region-
/places exported to./location-
/imports and exports/exported to

(d) /base/popstra/celebrity-
/breakup./base/popstra-
/breakup/participant

(e) /base/popstra/celebrity-
/dated./base/popstra-
/dated/participant

(f) /government/legislative session-
/members./government-
/government position held/legislative sessions

Figure 4: Histograms of embedding phases from six symmetric relations on FB15k-237. (k = 1000)

17

0 π1 π2 π01002003000 π1 π2 π01002003000 π1 π2 π01002003000 π1 π2 π01002003000 π1 π2 π01002003000 π1 π2 π0100200300400Published as a conference paper at ICLR 2019

(a) member of domain topic
◦ synset domain topic of

(b) has part ◦ part of

(c) synset domain usage of
◦ member of domain usage

(d) synset domain region of
◦ member of domain region

(e) member meronym ◦ member holonym

(f) instance hypernym ◦ instance hyponym

Figure 5: Histograms of element-wise additions of inversed relation embedding phases on WN18.
(k = 500)

18

0 π1 π2 π01002000 π1 π2 π01002000 π1 π2 π0501001500 π1 π2 π0501001500 π1 π2 π01002000 π1 π2 π050100