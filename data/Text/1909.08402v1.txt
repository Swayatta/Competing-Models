Enriching BERT with Knowledge Graph Embeddings for Document

Classiﬁcation

Malte Ostendorff1,2, Peter Bourgonje1, Maria Berger1,
Juli´an Moreno-Schneider1, Georg Rehm1, Bela Gipp2

1Speech and Language Technology, DFKI GmbH, Germany

first.last@dfki.de

2University of Konstanz, Germany

first.last@uni-konstanz.de

Abstract

In this paper we focus on the classiﬁcation
of books using short descriptive texts (cover
blurbs) and additional metadata. Building
upon BERT, a deep neural language model, we
demonstrate how to combine text representa-
tions with metadata and knowledge graph em-
beddings, which encode author information.
Compared to the standard BERT approach we
achieve considerably better results for the clas-
siﬁcation task. For a more coarse-grained clas-
siﬁcation using eight labels we achieve an F1-
score of 87.20, while a detailed classiﬁcation
using 343 labels yields an F1-score of 64.70.
We make the source code and trained models
of our experiments publicly available.
Introduction

1
With ever-increasing amounts of data available,
there is an increase in the need to offer tooling
to speed up processing, and eventually making
sense of this data. Because fully-automated tools
to extract meaning from any given input to any
desired level of detail have yet to be developed,
this task is still at least supervised, and often (par-
tially) resolved by humans; we refer to these hu-
mans as knowledge workers. Knowledge work-
ers are professionals that have to go through large
amounts of data and consolidate, prepare and pro-
cess it on a daily basis. This data can originate
from highly diverse portals and resources and de-
pending on type or category, the data needs to be
channelled through speciﬁc down-stream process-
ing pipelines. We aim to create a platform for cu-
ration technologies that can deal with such data
from diverse sources and that provides natural lan-
guage processing (NLP) pipelines tailored to par-
ticular content types and genres, rendering this ini-
tial classiﬁcation an important sub-task.

In this paper, we work with the dataset of the
2019 GermEval shared task on hierarchical text

classiﬁcation (Remus et al., 2019) and use the pre-
deﬁned set of labels to evaluate our approach to
this classiﬁcation task1.

Deep neural

language models have recently
evolved to a successful method for representing
text.
In particular, Bidirectional Encoder Rep-
resentations from Transformers (BERT; Devlin
et al., 2019) outperformed previous state-of-the-
art methods by a large margin on various NLP
tasks. We adopt BERT for text-based classiﬁca-
tion and extend the model with additional meta-
data provided in the context of the shared task,
such as author, publisher, publishing date, etc.

A key contribution of this paper is the inclu-
sion of additional (meta) data using a state-of-the-
art approach for text processing. Being a transfer
learning approach, it facilitates the task solution
with external knowledge for a setup in which rela-
tively little training data is available. More pre-
cisely, we enrich BERT, as our pre-trained text
representation model, with knowledge graph em-
beddings that are based on Wikidata (Vrandecic
and Kr¨otzsch, 2014), add metadata provided by
the shared task organisers (title, author(s), publish-
ing date, etc.) and collect additional information
on authors for this particular document classiﬁca-
tion task. As we do not rely on text-based fea-
tures alone but also utilize document metadata, we
consider this as a document classiﬁcation problem.
The proposed approach is an attempt to solve this
problem exemplary for single dataset provided by
the organisers of the shared task.

2 Related Work
A central challenge in work on genre classiﬁcation
is the deﬁnition of a both rigid (for theoretical pur-
poses) and ﬂexible (for practical purposes) mode

1https://www.inf.uni-hamburg.
de/en/inst/ab/lt/resources/data/
germeval-2019-hmc.html

9
1
0
2

 

p
e
S
8
1

 

 
 
]
L
C
.
s
c
[
 
 

1
v
2
0
4
8
0

.

9
0
9
1
:
v
i
X
r
a

of representation that is able to model various di-
mensions and characteristics of arbitrary text gen-
res. The size of the challenge can be illustrated
by the observation that there is no clear agreement
among researchers regarding actual genre labels or
their scope and consistency. There is a substan-
tial amount of previous work on the deﬁnition of
genre taxonomies, genre ontologies, or sets of la-
bels (Biber, 1988; Lee, 2002; Sharoff, 2018; Un-
derwood, 2014; Rehm, 2005). Since we work with
the dataset provided by the organisers of the 2019
GermEval shared task, we adopt their hierarchy of
labels as our genre palette. In the following, we
focus on related work more relevant to our contri-
bution.

With regard to text and document classiﬁca-
tion, BERT (Bidirectional Encoder Representa-
tions from Transformers) (Devlin et al., 2019) is
a pre-trained embedding model that yields state
of the art results in a wide span of NLP tasks,
such as question answering, textual entailment and
natural language inference learning (Artetxe and
Schwenk, 2018). Adhikari et al. (2019) are among
the ﬁrst to apply BERT to document classiﬁca-
tion. Acknowledging challenges like incorporat-
ing syntactic information, or predicting multiple
labels, they describe how they adapt BERT for
the document classiﬁcation task. In general, they
introduce a fully-connected layer over the ﬁnal
hidden state that contains one neuron each repre-
senting an input token, and further optimize the
model choosing soft-max classiﬁer parameters to
weight the hidden state layer. They report state
of the art results in experiments based on four
popular datasets. An approach exploiting Hierar-
chical Attention Networks is presented by Yang
et al. (2016). Their model introduces a hierarchi-
cal structure to represent the hierarchical nature
of a document. Yang et al. (2016) derive atten-
tion on the word and sentence level, which makes
the attention mechanisms react ﬂexibly to long and
short distant context information during the build-
ing of the document representations. They test
their approach on six large scale text classiﬁcation
problems and outperform previous methods sub-
stantially by increasing accuracy by about 3 to 4
percentage points. Aly et al. (2019) (the organisers
of the GermEval 2019 shared task on hierarchical
text classiﬁcation) use shallow capsule networks,
reporting that these work well on structured data
for example in the ﬁeld of visual inference, and

outperform CNNs, LSTMs and SVMs in this area.
They use the Web of Science (WOS) dataset and
introduce a new real-world scenario dataset called
Blurb Genre Collection (BGC)2.

With regard to external resources to enrich
the classiﬁcation task, Zhang et al. (2019) ex-
periment with external knowledge graphs to en-
rich embedding information in order to ultimately
improve language understanding. They use struc-
tural knowledge represented by Wikidata enti-
ties and their relation to each other. A mix of
large-scale textual corpora and knowledge graphs
is used to further train language representation
exploiting ERNIE (Sun et al., 2019), consider-
ing lexical, syntactic, and structural information.
Wang et al. (2009) propose and evaluate an ap-
proach to improve text classiﬁcation with knowl-
edge from Wikipedia. Based on a bag of words
approach, they derive a thesaurus of concepts from
Wikipedia and use it for document expansion. The
resulting document representation improves the
performance of an SVM classiﬁer for predicting
text categories.

3 Dataset and Task

Our experiments are modelled on the GermEval
2019 shared task and deal with the classiﬁcation
of books. The dataset contains 20,784 German
books. Each record has:

• A title.
• A list of authors. The average number of
authors per book is 1.13, with most books
(14,970) having a single author and one out-
lier with 28 authors.

• A short descriptive text (blurb) with an aver-

age length of 95 words.

• A URL pointing to a page on the publisher’s

website.

• An ISBN number.
• The date of publication.

The books are labeled according to the hierar-
chy used by the German publisher Random House.
This taxonomy includes a mix of genre and top-
ical categories.
It has eight top-level genre cat-
egories, 93 on the second level and 242 on the

2Note that this is not the dataset used in the shared task.

most detailed third level. The eight top-level
labels are ‘Ganzheitliches Bewusstsein’ (holistic
awareness/consciousness), ‘K¨unste’ (arts), ‘Sach-
buch’ (non-ﬁction), ‘Kinderbuch & Jugendbuch’
(children and young adults), ‘Ratgeber’ (coun-
selor/advisor), ‘Literatur & Unterhaltung’ (liter-
ature and entertainment), ‘Glaube & Ethik’ (faith
and ethics), ‘Architektur & Garten’ (architecture
and garden). We refer to the shared task descrip-
tion3 for details on the lower levels of the ontol-
ogy.

Note that we do not have access to any of the
full texts. Hence, we use the blurbs as input for
BERT. Given the relatively short average length of
the blurbs, this considerably decreases the amount
of data points available for a single book.

The shared task is divided into two sub-task.
Sub-task A is to classify a book, using the in-
formation provided as explained above, according
to the top-level of the taxonomy, selecting one or
more of the eight labels. Sub-task B is to classify a
book according to the detailed taxonomy, specify-
ing labels on the second and third level of the tax-
onomy as well (in total 343 labels). This renders
both sub-tasks a multi-label classiﬁcation task.

4 Experiments

As indicated in Section 1, we base our experiments
on BERT in order to explore if it can be success-
fully adopted to the task of book or document clas-
siﬁcation. We use the pre-trained models and en-
rich them with additional metadata and tune the
models for both classiﬁcation sub-tasks.

4.1 Metadata Features
In addition to the metadata provided by the organ-
isers of the shared task (see Section 3), we add the
following features.

• Number of authors.
• Academic title (Dr. or Prof.), if found in au-

thor names (0 or 1).

• Number of words in title.
• Number of words in blurb.
• Length of longest word in blurb.
• Mean word length in blurb.
3https://competitions.codalab.org/

competitions/20139

Gender

Author emb.
Total books

Train Validation
12,681
(87%)
10,407
(72%)
14,548

1,834
(88%)
1,549
(75%)
2,079

Test
3,641
(88%)
3,010
(72%)
4,157

Table 1: Availability of additional data with respect to
the dataset (relative numbers in parenthesis).

• Median word length in blurb.
• Age in years after publication date.
• Probability of ﬁrst author being male or fe-
male based on the Gender-by-Name dataset4.
Available for 87% of books in training set
(see Table 1).

The statistics (length, average, etc.) regarding
blurbs and titles are added in an attempt to make
certain characteristics explicit to the classiﬁer. For
example, books labeled ‘Kinderbuch & Jugend-
buch’ (children and young adults) have a title that
is on average 5.47 words long, whereas books la-
beled ‘K¨unste’ (arts) on average have shorter titles
of 3.46 words. The binary feature for academic ti-
tle is based on the assumption that academics are
more likely to write non-ﬁction. The gender fea-
ture is included to explore (and potentially exploit)
whether or not there is a gender-bias for particular
genres.

4.2 Author Embeddings
Whereas one should not judge a book by its cover,
we argue that additional information on the au-
thor can support the classiﬁcation task. Authors
often adhere to their speciﬁc style of writing and
are likely to specialize in a speciﬁc genre.

To be precise, we want to include author iden-
tity information, which can be retrieved by se-
lecting particular properties from, for example,
the Wikidata knowledge graph (such as date of
birth, nationality, or other biographical features).
A drawback of this approach, however, is that one
has to manually select and ﬁlter those properties
that improve classiﬁcation performance. This is
why, instead, we follow a more generic approach
and utilize automatically generated graph embed-
dings as author representations.

4Probability of given names being male/female based on
US names from 1930-2015. https://data.world/
howarder/gender-by-name

Figure 1: Visualization of Wikidata embeddings
for Franz Kafka (3D-projection with PCA)5. Nearest
neighbours in original 200D space: Arthur Schnitzler,
E.T.A Hoffmann and Hans Christian Andersen.

Graph embedding methods create dense vector
representations for each node such that distances
between these vectors predict the occurrence of
edges in the graph. The node distance can be in-
terpreted as topical similarity between the corre-
sponding authors.

We rely on pre-trained embeddings based on
PyTorch BigGraph (Lerer et al., 2019). The graph
model is trained on the full Wikidata graph, us-
ing a translation operator to represent relations6.
Figure 1 visualizes the locality of the author em-
beddings.

To derive the author embeddings, we look up
Wikipedia articles that match with the author
names and map the articles to the corresponding
Wikidata items7. If a book has multiple authors,
the embedding of the ﬁrst author for which an
embedding is available is used. Following this
method, we are able to retrieve embeddings for
72% of the books in the training and test set (see
Table 1).

4.3 Pre-trained German Language Model
Although the pre-trained BERT language models
are multilingual and, therefore, support German,
we rely on a BERT model that was exclusively

Figure 2: Model architecture used in our experiments.
Text-features are fed through BERT, concatenated with
metadata and author embeddings and combined in a
multilayer perceptron (MLP).

pre-trained on German text, as published by the
German company Deepset AI8. This model was
trained from scratch on the German Wikipedia,
news articles and court decisions9. Deepset AI
reports better performance for the German BERT
models compared to the multilingual models on
previous German shared tasks (GermEval2018-
Fine and GermEval 2014).

4.4 Model Architecture
Our neural network architecture, shown in Fig-
ure 2, resembles the original BERT model (Devlin
et al., 2019) and combines text- and non-text fea-
tures with a multilayer perceptron (MLP).

The BERT architecture uses 12 hidden layers,
each layer consists of 768 units. To derive con-
textualized representations from textual features,
the book title and blurb are concatenated and then
fed through BERT. To minimize the GPU mem-
ory consumption, we limit the input length to 300
tokens (which is shorter than BERT’s hard-coded
limit of 512 tokens). Only 0.25% of blurbs in the
training set consist of more than 300 words, so this
cut-off can be expected to have minor impact.

The non-text features are generated in a sep-
arate preprocessing step. The metadata features
are represented as a ten-dimensional vector (two
dimensions for gender, see Section 4.1). Author
embedding vectors have a length of 200 (see Sec-

6Pre-trained

Knowledge

Graph

Embeddings.

https://github.com/facebookresearch/
PyTorch-BigGraph#pre-trained-embeddings

7Mapping Wikipedia pages to Wikidata IDs and vice
versa. https://github.com/jcklie/wikimapper

8Details on BERT-German training procedure: https:

//deepset.ai/german-bert

9German legal documents used to train BERT-German:

http://openlegaldata.io/research/2019/
02/19/court-decision-dataset.html

TitleConcatenateMetadataAuthor EmbeddingsBERT12 layersTextOutput Layer2-layer MLPtion 4.2).
In the next step, all three representa-
tions are concatenated and passed into a MLP with
two layers, 1024 units each and ReLu activation
function. During training, the MLP is supposed to
learn a non-linear combination of its input repre-
sentations. Finally, the output layer does the actual
classiﬁcation.
In the SoftMax output layer each
unit corresponds to a class label. For sub-task A
the output dimension is eight. We treat sub-task
B as a standard multi-label classiﬁcation problem,
i. e., we neglect any hierarchical information. Ac-
cordingly, the output layer for sub-task B has 343
units. When the value of an output unit is above
a given threshold the corresponding label is pre-
dicted, whereby thresholds are deﬁned separately
for each class. The optimum was found by varying
the threshold in steps of 0.1 in the interval from 0
to 1.

Implementation

4.5
Training is performed with batch size b = 16,
dropout probability d = 0.1, learning rate η =
2−5 (Adam optimizer) and 5 training epochs.
These hyperparameters are the ones proposed by
Devlin et al. (2019) for BERT ﬁne-tuning. We
did not experiment with hyperparameter tuning
ourselves except for optimizing the classiﬁcation
threshold for each class separately. All experi-
ments are run on a GeForce GTX 1080 Ti (11
GB), whereby a single training epoch takes up to
10min. If there is no single label for which predic-
tion probability is above the classiﬁcation thresh-
old, the most popular label (Literatur & Unterhal-
tung) is used as prediction.

4.6 Baseline
To compare against a relatively simple baseline,
we implemented a Logistic Regression classiﬁer
chain from scikit-learn (Pedregosa et al., 2011).
This baseline uses the text only and converts it
to TF-IDF vectors. As with the BERT model, it
performs 8-class multi-label classiﬁcation for sub-
task A and 343-class multi-label classiﬁcation for
sub-task B, ignoring the hierarchical aspect in the
labels.

5 Results

Table 2 shows the results of our experiments. As
prescribed by the shared task, the essential evalu-
ation metric is the micro-averaged F1-score. All
scores reported in this paper are obtained using

models that are trained on the training set and
evaluated on the validation set. For the ﬁnal sub-
mission to the shared task competition, the best-
scoring setup is used and trained on the training
and validation sets combined.

We are able to demonstrate that incorporating
metadata features and author embeddings leads to
better results for both sub-tasks. With an F1-score
of 87.20 for task A and 64.70 for task B, the setup
using BERT-German with metadata features and
author embeddings (1) outperforms all other se-
tups. Looking at the precision score only, BERT-
German with metadata features (2) but without au-
thor embeddings performs best.

In comparison to the baseline (7), our evaluation
shows that deep transformer models like BERT
considerably outperform the classical TF-IDF ap-
proach, also when the input is the same (using
the title10 and blurb only). BERT-German (4) and
BERT-Multilingual (5) are only using text-based
features (title and blurb), whereby the text repre-
sentations of the BERT-layers are directly fed into
the classiﬁcation layer.

To establish the information gain of author em-
beddings, we train a linear classiﬁer on author
embeddings, using this as the only feature. The
author-only model (6) is exclusively evaluated on
books for which author embeddings are available,
so the numbers are based on a slightly smaller val-
idation set. With an F1-score of 61.99 and 32.13
for sub-tasks A and B, respectively, the author
model yields the worst result. However, the infor-
mation contained in the author embeddings help
improve performance, as the results of the best-
performing setup show. When evaluating the best
model (1) only on books for that author embed-
dings are available, we ﬁnd a further improvement
with respect to F1 score (task A: from 87.20 to
87.81; task B: 64.70 to 65.74).

6 Discussion

The best performing setup uses BERT-German
with metadata features and author embeddings.
In this setup the most data is made available to
the model, indicating that, perhaps not surpris-
ingly, more data leads to better classiﬁcation per-
formance. We expect that having access to the ac-
tual text of the book will further increase perfor-

10The baseline model uses the blurbs only, without the ti-
tle, but we do not expect that including the title in the input
would make up for the considerable gap between the two.

Model / Features
(1) BERT-German + Metadata + Author
(2) BERT-German + Metadata
(3) BERT-German + Author
(4) BERT-German
(5) BERT-Base-Multilingual-Cased
(6) Author
(7) Baseline
Results of best model (1) on test set

Sub-Task A – 8 labels
F1
87.20
86.90
86.84
86.65
83.94
61.99
77.00
88.00

Prec.
88.76
89.65
89.02
89.65
86.31
75.59
79.00
85.00

Recall
85.70
84.30
84.75
83.86
81.70
52.54
74.00
86.00

Sub-Task B – 343 labels
F1
Recall
52.70
64.70
51.67
63.96
53.03
64.41
60.51
47.47
40.19
54.08
20.65
32.13
45.00
34.00
62.00
78.00

Prec.
83.78
83.94
82.02
83.44
82.63
72.39
67.00
52.00

Table 2: Evaluation scores (micro avg.) on validation set with respect to the features used for classiﬁcation. The
model with BERT-German, metadata and author embeddings yields the highest F1-scores on both tasks and was
accordingly submitted to the GermEval 2019 competition. The scores in the last row are the result on the test set
as reported by Remus et al., 2019.

Title / Author

Correct Labels

Predicted Labels

Coenzym Q10
Dr. med. Gisela Rauch-Petz Ratgeber (I); Gesundheit & Ern¨ahrung (II)

Gesundheit & Ern¨ahrung (II)

Gelebte Wertsch¨atzung
Barbara von Meibom
Wie Romane entstehen
Hanns-Josef Ortheil,
Klaus Siblewski
Das Grab ist erst der Anfang
Kathy Reichs

Glaube & Ethik (I);
Psychologie & Spiritualit¨at (II)
Literatur & Unterhaltung (I); Sachbuch (I);
Romane & Erz¨ahlungen (II);
Briefe, Essays, Gespr¨ache (II)
Literatur & Unterhaltung (I);
Krimi & Thriller (II)

Sachbuch (I); Politik & Gesellschaft (II)

Literatur & Unterhaltung (I)

Literatur & Unterhaltung (I);
Krimi & Thriller (II)

Table 3: Book examples and their correct and predicted labels. Hierarchical label level is in parenthesis.

mance. The average number of words per blurb
is 95 and only 0.25% of books exceed our cut-off
point of 300 words per blurb. In addition, the dis-
tribution of labeled books is imbalanced, i.e. for
many classes only a single digit number of training
instances exist (Fig. 3). Thus, this task can be con-
sidered a low resource scenario, where including
related data (such as author embeddings and au-
thor identity features such as gender and academic
title) or making certain characteristics more ex-
plicit (title and blurb length statistics) helps. Fur-
thermore, it should be noted that the blurbs do
not provide summary-like abstracts of the book,
but instead act as teasers, intended to persuade the
reader to buy the book.

As reﬂected by the recent popularity of deep
transformer models, they considerably outperform
the Logistic Regression baseline using TF-IDF
representation of the blurbs. However, for the
simpler sub-task A, the performance difference
between the baseline model and the multilingual
BERT model is only six points, while consum-

ing only a fraction of BERT’s computing re-
sources. The BERT model trained for German
(from scratch) outperforms the multilingual BERT
model by under three points for sub-task A and
over six points for sub-task B, conﬁrming the ﬁnd-
ings reported by the creators of the BERT-German
models for earlier GermEval shared tasks.

While generally on par for sub-task A11, for
sub-task B there is a relatively large discrepancy
between precision and recall scores. In all setups,
precision is considerably higher than recall. We
expect this to be down to the fact that for some
of the 343 labels in sub-task B, there are very
few instances. This means that if the classiﬁer
predicts a certain label, it is likely to be correct
(i. e., high precision), but for many instances hav-
ing low-frequency labels, this low-frequency label
is never predicted (i. e., low recall).

As mentioned in Section 4.4, we neglect the hi-
erarchical nature of the labels and ﬂatten the hi-
erarchy (with a depth of three levels) to a sin-

11Except for the Author-only setup.

gle set of 343 labels for sub-task B. We expect
this to have negative impact on performance, be-
cause it allows a scenario in which, for a par-
ticular book, we predict a label from the ﬁrst
level and also a non-matching label from the sec-
ond level of the hierarchy. The example Coen-
zym Q10 (Table 3) demonstrates this issue. While
the model correctly predicts the second level label
Gesundheit & Ern¨ahrung (health & diet), it misses
the corresponding ﬁrst level label Ratgeber (advi-
sor). Given the model’s tendency to higher pre-
cision rather than recall in sub-task B, as a post-
processing step we may want to take the most de-
tailed label (on the third level of the hierarchy) to
be correct and manually ﬁx the higher level labels
accordingly. We leave this for future work and
note that we expect this to improve performance,
but it is hard to say by how much. We hypothesize
that an MLP with more and bigger layers could
improve the classiﬁcation performance. However,
this would increase the number of parameters to be
trained, and thus requires more training data (such
as the book’s text itself, or a summary of it).

Figure 3: In sub-task B for many low-hierarchical la-
bels only a small number of training samples exist,
making it more difﬁcult to predict the correct label.

7 Conclusions and Future Work

In this paper we presented a way of enriching
BERT with knowledge graph embeddings and ad-
ditional metadata. Exploiting the linked knowl-
edge that underlies Wikidata improves perfor-
mance for our task of document classiﬁcation.
With this approach we improve the standard BERT
models by up to four percentage points in accu-
racy. Furthermore, our results reveal that with
task-speciﬁc information such as author names

and publication metadata improves the classiﬁ-
cation task essentially compared a text-only ap-
proach. Especially, when metadata feature en-
gineering is less trivial, adding additional task-
speciﬁc information from an external knowledge
source such as Wikidata can help signiﬁcantly.
The source code of our experiments and the
trained models are publicly available12.

Future work comprises the use of hierarchi-
cal information in a post-processing step to reﬁne
the classiﬁcation. Another promising approach to
tackle the low resource problem for task B would
be to use label embeddings. Many labels are simi-
lar and semantically related. The relationships be-
tween labels can be utilized to model in a joint
embedding space (Augenstein et al., 2018). How-
ever, a severe challenge with regard to setting up
label embeddings is the quite heterogeneous cat-
egory system that can often be found in use on-
line. The Random House taxonomy (see above)
includes category names, i. e., labels, that relate
to several different dimensions including, among
others, genre, topic and function.

This work is done in the context of a larger
project that develops a platform for curation tech-
nologies. Under the umbrella of this project, the
classiﬁcation of pieces of incoming text content
according to an ontology is an important step that
allows the routing of this content to particular, spe-
cialized processing workﬂows, including parame-
terising the included pipelines. Depending on con-
tent type and genre, it may make sense to apply
OCR post-processing (for digitized books from
centuries ago), machine translation (for content in
languages unknown to the user), information ex-
traction, or other particular and specialized proce-
dures. Constructing such a generic ontology for
digital content is a challenging task, and classiﬁ-
cation performance is heavily dependent on input
data (both in shape and amount) and on the na-
ture of the ontology to be used (in the case of this
paper, the one predeﬁned by the shared task organ-
isers). In the context of our project, we continue to
work towards a maximally generic content ontol-
ogy, and at the same time towards applied classi-
ﬁcation architectures such as the one presented in
this paper.

12https://ostendorff.org/r/germeval19

1-910-1920-2930-3940-49 50Available number of samples per label in training set020406080100120Number of label classesFabian Pedregosa, Gael Varoquaux, Alexandre Gram-
fort, Vincent Michel, Bertrand Thirion, Olivier
Grisel, Mathieu Blondel, Peter Prettenhofer, Ron
Weiss, Vincent Dubourg, Jake Vanderplas, Alexan-
dre Passos, David Cournapeau, Matthieu Brucher,
Matthieu Perrot, and Edouard Duchesnay. 2011.
Scikit-learn: Machine Learning in Python. Journal
of Machine Learning Research, 12:2825–2830.

Georg Rehm. 2005. Hypertextsorten: Deﬁnition –
thesis, Justus-

Struktur – Klassiﬁkation.
Liebig-Universit¨at Gießen, Norderstedt.

Ph.D.

Steffen Remus, Rami Aly, and Chris Biemann. 2019.
GermEval 2019 Task 1 : Hierarchical Classiﬁcation
In Proceedings of the GermEval 2019
of Blurbs.
Workshop, pages 1–13, Erlangen, Germany.

Serge Sharoff. 2018. Functional text dimensions for
the annotation of web corpora. Corpora, 13(1):65–
95.

Y. Sun, S. Wang, Y. Li, S. Feng, X. Chen, H. Zhang,
X. Tian, D. Zhu, H. Tian, and H. Wu. 2019. Ernie:
Enhanced representation through knowledge inte-
gration. arXiv:1904.09223.

Ted Underwood. 2014. Understanding Genre in a
Collection of a Million Volumes, Interim Report.
ﬁgshare.

Denny Vrandecic and Markus Kr¨otzsch. 2014. Wiki-
data: a free collaborative knowledgebase. Commun.
ACM, 57(10):78–85.

Pu Patrick Wang, Jingjie Hu, Hua-Jun Zeng, and Zhi-
gang Chen. 2009. Using wikipedia knowledge to
improve text classiﬁcation. Knowledge and Infor-
mation Systems, 19(3):265–281.

Zichao Yang, Diyi Yang, Chris Dyer, Xiaodong He,
Alex Smola, and Eduard Hovy. 2016. Hierarchi-
cal attention networks for document classiﬁcation.
In Proceedings of the 2016 Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies,
pages 1480–1489, San Diego, California. Associa-
tion for Computational Linguistics.

Zhengyan Zhang, Xu Han, Zhiyuan Liu, Xin Jiang,
Maosong Sun, and Qun Liu. 2019. ERNIE: En-
hanced language representation with informative en-
In Proceedings of the 57th Annual Meet-
tities.
ing of the Association for Computational Linguis-
tics, pages 1441–1451, Florence, Italy. Association
for Computational Linguistics.

Acknowledgments

This research is funded by the German Fed-
eral Ministry of Education and Research (BMBF)
through the “Unternehmen Region”,
instru-
ment “Wachstumskern” QURATOR (grant no.
03WKDA1A). We would like to thank the anony-
mous reviewers for comments on an earlier ver-
sion of this manuscript.

